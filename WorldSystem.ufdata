{
	"Repositories":[ 
		{
			"Type":"uFrame.MVVM.SubSystemGraph"			, 
			"Records":[ 
				{
					"Identifier":"c1093abb-2c57-4140-9ace-8e4367dfbe0a"					, 
					"Data":"{\r\n\t\"IsDirty\":true\t, \r\n\t\"Identifier\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"RootFilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.Editor.Compiling.CommonNodes.TypeReferenceNode"			, 
			"Records":[ 
				{
					"Identifier":"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3"					, 
					"Data":"{\r\n\t\"Name\":\"KBEngine.Entity\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"9366806e-abc7-484d-9582-16bafef5f2c2"					, 
					"Data":"{\r\n\t\"Name\":\"System.Object\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"9366806e-abc7-484d-9582-16bafef5f2c2\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.CommandNode"			, 
			"Records":[ 
				{
					"Identifier":"cc06b016-4af8-4d57-b7b4-f0a9701895bc"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"ReSpawn\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"cc06b016-4af8-4d57-b7b4-f0a9701895bc\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.PropertiesChildItem"			, 
			"Records":[ 
				{
					"Identifier":"1243db64-01d3-48c3-aa00-f54c83d3d93d"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"1243db64-01d3-48c3-aa00-f54c83d3d93d\"\t, \r\n\t\"NodeId\":\"cc06b016-4af8-4d57-b7b4-f0a9701895bc\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Password\"}\r\n"				}
, 				{
					"Identifier":"a2878380-2f64-4974-9376-484c1cf4cc7e"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"a2878380-2f64-4974-9376-484c1cf4cc7e\"\t, \r\n\t\"NodeId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"name\"}\r\n"				}
, 				{
					"Identifier":"ba8964d7-05c1-4c3b-aef5-ab88d6a4fb95"					, 
					"Data":"{\r\n\t\"RelatedType\":\"Double\"\t, \r\n\t\"Identifier\":\"ba8964d7-05c1-4c3b-aef5-ab88d6a4fb95\"\t, \r\n\t\"NodeId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"moveSpeed\"}\r\n"				}
, 				{
					"Identifier":"d5bd36a0-9e79-40c6-810e-c42872038f1b"					, 
					"Data":"{\r\n\t\"RelatedType\":\"Vector3\"\t, \r\n\t\"Identifier\":\"d5bd36a0-9e79-40c6-810e-c42872038f1b\"\t, \r\n\t\"NodeId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Position\"}\r\n"				}
, 				{
					"Identifier":"df0cfeb3-f21b-485a-bf95-d0538c1480d1"					, 
					"Data":"{\r\n\t\"RelatedType\":\"Vector3\"\t, \r\n\t\"Identifier\":\"df0cfeb3-f21b-485a-bf95-d0538c1480d1\"\t, \r\n\t\"NodeId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Order\":1\t, \r\n\t\"Name\":\"Direction\"}\r\n"				}
, 				{
					"Identifier":"e7fea2a7-0302-40f6-9eb4-db01a606bc1b"					, 
					"Data":"{\r\n\t\"RelatedType\":\"Int32\"\t, \r\n\t\"Identifier\":\"e7fea2a7-0302-40f6-9eb4-db01a606bc1b\"\t, \r\n\t\"NodeId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Order\":2\t, \r\n\t\"Name\":\"modelID\"}\r\n"				}
, 				{
					"Identifier":"361cb515-a867-4c77-ba4d-789f974e8efc"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"361cb515-a867-4c77-ba4d-789f974e8efc\"\t, \r\n\t\"NodeId\":\"1c901bcc-dd24-4533-803f-096859348542\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Key\"}\r\n"				}
, 				{
					"Identifier":"3e98144b-f769-4695-a14d-5d29445bd578"					, 
					"Data":"{\r\n\t\"RelatedType\":\"UInt32\"\t, \r\n\t\"Identifier\":\"3e98144b-f769-4695-a14d-5d29445bd578\"\t, \r\n\t\"NodeId\":\"1c901bcc-dd24-4533-803f-096859348542\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"SpaceID\"}\r\n"				}
, 				{
					"Identifier":"b54428e4-8533-48cc-93ee-43d82bf2784e"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"b54428e4-8533-48cc-93ee-43d82bf2784e\"\t, \r\n\t\"NodeId\":\"20c366e6-3ce3-4a37-a86d-3a3122f9fbca\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"bc5e36af-86a7-4489-96bc-59e244511d5c"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"bc5e36af-86a7-4489-96bc-59e244511d5c\"\t, \r\n\t\"NodeId\":\"230c68c4-4bea-46a6-9d68-a92587eb4bc2\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"70493790-fe3e-46a4-a679-bdc9b7f98eb7"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"70493790-fe3e-46a4-a679-bdc9b7f98eb7\"\t, \r\n\t\"NodeId\":\"3b304ebb-af46-44ac-bf99-1630604bec7c\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"a9793818-5d1a-4ad9-9847-bf26fcb6fb69"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"a9793818-5d1a-4ad9-9847-bf26fcb6fb69\"\t, \r\n\t\"NodeId\":\"524474b3-4f31-46f7-b66a-38dc9cf6533d\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"c0a035b9-d439-4571-b021-c68a404aebe6"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"c0a035b9-d439-4571-b021-c68a404aebe6\"\t, \r\n\t\"NodeId\":\"91d8586a-db5c-46b3-b080-8bd61e5f258f\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"37616646-4675-45af-9800-11f1f06116db"					, 
					"Data":"{\r\n\t\"RelatedType\":\"UInt32\"\t, \r\n\t\"Identifier\":\"37616646-4675-45af-9800-11f1f06116db\"\t, \r\n\t\"NodeId\":\"955007ed-3378-401e-a3ba-18e8c6ab0a33\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"SpaceID\"}\r\n"				}
, 				{
					"Identifier":"9e4e46d3-0343-4779-98b8-29e098ca8c5a"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"9e4e46d3-0343-4779-98b8-29e098ca8c5a\"\t, \r\n\t\"NodeId\":\"955007ed-3378-401e-a3ba-18e8c6ab0a33\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Value\"}\r\n"				}
, 				{
					"Identifier":"f9977eae-5982-439d-9d82-9c1059aca223"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"f9977eae-5982-439d-9d82-9c1059aca223\"\t, \r\n\t\"NodeId\":\"955007ed-3378-401e-a3ba-18e8c6ab0a33\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Key\"}\r\n"				}
, 				{
					"Identifier":"8204d040-362a-4a2d-b21b-f36c9101899e"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"8204d040-362a-4a2d-b21b-f36c9101899e\"\t, \r\n\t\"NodeId\":\"a836080f-6fa7-45e1-8276-e21efec691c9\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"700ac544-60ce-467b-89c0-e6c94e991191"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"700ac544-60ce-467b-89c0-e6c94e991191\"\t, \r\n\t\"NodeId\":\"ae3b9b65-f6e1-4ae2-aa60-9bc0b2214f11\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"835426e3-5a4b-4477-baac-87505b3fbfbe"					, 
					"Data":"{\r\n\t\"RelatedType\":\"Boolean\"\t, \r\n\t\"Identifier\":\"835426e3-5a4b-4477-baac-87505b3fbfbe\"\t, \r\n\t\"NodeId\":\"ae3b9b65-f6e1-4ae2-aa60-9bc0b2214f11\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"isControlled\"}\r\n"				}
, 				{
					"Identifier":"adb47042-5c16-437c-82f8-b7956428a59b"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"adb47042-5c16-437c-82f8-b7956428a59b\"\t, \r\n\t\"NodeId\":\"b4799974-1e0d-4f4e-98bd-d9c31949d7e5\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"773f549d-df5d-4c4e-89f9-27e1958f8e5c"					, 
					"Data":"{\r\n\t\"RelatedType\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"Identifier\":\"773f549d-df5d-4c4e-89f9-27e1958f8e5c\"\t, \r\n\t\"NodeId\":\"c2c5dcea-2b91-4d7b-8a9f-d2ebbd0ec6e0\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Entity\"}\r\n"				}
, 				{
					"Identifier":"d80870c9-728f-43f2-b1e8-592733d419d2"					, 
					"Data":"{\r\n\t\"RelatedType\":\"String\"\t, \r\n\t\"Identifier\":\"d80870c9-728f-43f2-b1e8-592733d419d2\"\t, \r\n\t\"NodeId\":\"dcede665-815a-4897-b459-ba70cf211cf0\"\t, \r\n\t\"Order\":0\t, \r\n\t\"Name\":\"Respath\"}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.ElementNode"			, 
			"Records":[ 
				{
					"Identifier":"33195130-6e54-4625-a8b4-d4278894e655"					, 
					"Data":"{\r\n\t\"Name\":\"Food\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"508800b4-4676-42c1-a0de-55df0372e305"					, 
					"Data":"{\r\n\t\"Name\":\"Smash\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"b5985a77-63c6-4202-ae04-e1b37829b60f"					, 
					"Data":"{\r\n\t\"Name\":\"Avatar\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"f0162696-b680-45e5-ab78-bf099f943e7b"					, 
					"Data":"{\r\n\t\"Name\":\"EntityCommon\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.CommandsChildItem"			, 
			"Records":[ 
				{
					"Identifier":"b64751ab-012a-4d4c-b68c-f26792050448"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"ReSpawn\"\t, \r\n\t\"RelatedType\":\"cc06b016-4af8-4d57-b7b4-f0a9701895bc\"\t, \r\n\t\"Identifier\":\"b64751ab-012a-4d4c-b68c-f26792050448\"\t, \r\n\t\"NodeId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Order\":0}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.ServiceNode"			, 
			"Records":[ 
				{
					"Identifier":"83db4606-e238-47e7-84b5-140244a73854"					, 
					"Data":"{\r\n\t\"Name\":\"LoginService\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"83db4606-e238-47e7-84b5-140244a73854\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"e9242609-d672-4d2d-afa1-430480dbed76"					, 
					"Data":"{\r\n\t\"Name\":\"WorldViewService\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"e9242609-d672-4d2d-afa1-430480dbed76\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.HandlersReference"			, 
			"Records":[ 
				{
					"Identifier":"56dc745c-cd1c-4ab5-9866-2d02b9528a47"					, 
					"Data":"{\r\n\t\"SourceIdentifier\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Identifier\":\"56dc745c-cd1c-4ab5-9866-2d02b9528a47\"\t, \r\n\t\"NodeId\":\"83db4606-e238-47e7-84b5-140244a73854\"\t, \r\n\t\"Order\":0}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.SimpleClassNode"			, 
			"Records":[ 
				{
					"Identifier":"1c901bcc-dd24-4533-803f-096859348542"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onDelSpaceDataEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"1c901bcc-dd24-4533-803f-096859348542\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"20c366e6-3ce3-4a37-a86d-3a3122f9fbca"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onLeaveSpaceEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"20c366e6-3ce3-4a37-a86d-3a3122f9fbca\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"230c68c4-4bea-46a6-9d68-a92587eb4bc2"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"setpositionEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"230c68c4-4bea-46a6-9d68-a92587eb4bc2\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"2ac6ace5-68c1-499a-ac20-bfd96c5f63fc"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"OnLoginSuccessfullyEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"2ac6ace5-68c1-499a-ac20-bfd96c5f63fc\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"3b304ebb-af46-44ac-bf99-1630604bec7c"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onEnterWorldEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"3b304ebb-af46-44ac-bf99-1630604bec7c\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"524474b3-4f31-46f7-b66a-38dc9cf6533d"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"setdirectionEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"524474b3-4f31-46f7-b66a-38dc9cf6533d\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"91d8586a-db5c-46b3-b080-8bd61e5f258f"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onEnterSpaceEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"91d8586a-db5c-46b3-b080-8bd61e5f258f\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"955007ed-3378-401e-a3ba-18e8c6ab0a33"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onSetSpaceDataEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"955007ed-3378-401e-a3ba-18e8c6ab0a33\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"a836080f-6fa7-45e1-8276-e21efec691c9"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onLeaveWorldEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"a836080f-6fa7-45e1-8276-e21efec691c9\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"ae3b9b65-f6e1-4ae2-aa60-9bc0b2214f11"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"onControlledEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"ae3b9b65-f6e1-4ae2-aa60-9bc0b2214f11\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"b4799974-1e0d-4f4e-98bd-d9c31949d7e5"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"updatePositionEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"b4799974-1e0d-4f4e-98bd-d9c31949d7e5\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"c2c5dcea-2b91-4d7b-8a9f-d2ebbd0ec6e0"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"OnAvatarEnterWorldEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"c2c5dcea-2b91-4d7b-8a9f-d2ebbd0ec6e0\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"dcede665-815a-4897-b459-ba70cf211cf0"					, 
					"Data":"{\r\n\t\"IsStruct\":false\t, \r\n\t\"Name\":\"addSpaceGeometryMappingEvent\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"dcede665-815a-4897-b459-ba70cf211cf0\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.SubSystemNode"			, 
			"Records":[ 
				{
					"Identifier":"26e197e6-f817-4b8a-8e99-4ce471707cde"					, 
					"Data":"{\r\n\t\"Name\":\"WorldSystem\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.ViewNode"			, 
			"Records":[ 
				{
					"Identifier":"1ef593ac-e839-419f-9429-85a87be7b543"					, 
					"Data":"{\r\n\t\"ElementInputSlotId\":\"513f140b-c61d-4d6c-9c98-ab26a24403de\"\t, \r\n\t\"ScenePropertiesInputSlotId\":\"6abba399-7678-4b85-a38d-33b825b6fad3\"\t, \r\n\t\"Name\":\"SmashView\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"683f68c2-6f50-4b9d-8024-bb9bdc861316"					, 
					"Data":"{\r\n\t\"ElementInputSlotId\":\"f27db558-b020-4846-bce2-9044b0449af1\"\t, \r\n\t\"ScenePropertiesInputSlotId\":\"596cda68-3def-466f-b0bb-ef525ddb0d69\"\t, \r\n\t\"Name\":\"AvatarObjectView\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12"					, 
					"Data":"{\r\n\t\"ElementInputSlotId\":\"07656e2a-e9d7-4c53-8530-64673cf1383f\"\t, \r\n\t\"ScenePropertiesInputSlotId\":\"e5862ae0-7b8d-4e7f-bbc2-ffcc0ed8bf04\"\t, \r\n\t\"Name\":\"FoodView\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"Expanded\":false}\r\n"				}
, 				{
					"Identifier":"b048c389-cb22-4950-bf01-baeecb3f5b59"					, 
					"Data":"{\r\n\t\"ElementInputSlotId\":\"b921dfaa-1535-4807-b6b4-cb028e342b6d\"\t, \r\n\t\"ScenePropertiesInputSlotId\":\"752683ff-85dd-43ce-9e1e-302061473607\"\t, \r\n\t\"Name\":\"EntityCommonView\"\t, \r\n\t\"Order\":0\t, \r\n\t\"GraphId\":\"c1093abb-2c57-4140-9ace-8e4367dfbe0a\"\t, \r\n\t\"Identifier\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Expanded\":false}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.Element"			, 
			"Records":[ 
				{
					"Identifier":"513f140b-c61d-4d6c-9c98-ab26a24403de"					, 
					"Data":"{\r\n\t\"Identifier\":\"513f140b-c61d-4d6c-9c98-ab26a24403de\"\t, \r\n\t\"NodeId\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"f27db558-b020-4846-bce2-9044b0449af1"					, 
					"Data":"{\r\n\t\"Identifier\":\"f27db558-b020-4846-bce2-9044b0449af1\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"07656e2a-e9d7-4c53-8530-64673cf1383f"					, 
					"Data":"{\r\n\t\"Identifier\":\"07656e2a-e9d7-4c53-8530-64673cf1383f\"\t, \r\n\t\"NodeId\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"b921dfaa-1535-4807-b6b4-cb028e342b6d"					, 
					"Data":"{\r\n\t\"Identifier\":\"b921dfaa-1535-4807-b6b4-cb028e342b6d\"\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Order\":0}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.SceneProperties"			, 
			"Records":[ 
				{
					"Identifier":"6abba399-7678-4b85-a38d-33b825b6fad3"					, 
					"Data":"{\r\n\t\"Identifier\":\"6abba399-7678-4b85-a38d-33b825b6fad3\"\t, \r\n\t\"NodeId\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"596cda68-3def-466f-b0bb-ef525ddb0d69"					, 
					"Data":"{\r\n\t\"Identifier\":\"596cda68-3def-466f-b0bb-ef525ddb0d69\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"e5862ae0-7b8d-4e7f-bbc2-ffcc0ed8bf04"					, 
					"Data":"{\r\n\t\"Identifier\":\"e5862ae0-7b8d-4e7f-bbc2-ffcc0ed8bf04\"\t, \r\n\t\"NodeId\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"752683ff-85dd-43ce-9e1e-302061473607"					, 
					"Data":"{\r\n\t\"Identifier\":\"752683ff-85dd-43ce-9e1e-302061473607\"\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Order\":0}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.MVVM.BindingsReference"			, 
			"Records":[ 
				{
					"Identifier":"1d9b4402-bec0-41cb-937d-dcb2d23abe01"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindProperty\"\t, \r\n\t\"SourceIdentifier\":\"ba8964d7-05c1-4c3b-aef5-ab88d6a4fb95\"\t, \r\n\t\"Identifier\":\"1d9b4402-bec0-41cb-937d-dcb2d23abe01\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"4580e846-7e2d-4a94-a3fd-d134f6d76fc5"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindProperty\"\t, \r\n\t\"SourceIdentifier\":\"a2878380-2f64-4974-9376-484c1cf4cc7e\"\t, \r\n\t\"Identifier\":\"4580e846-7e2d-4a94-a3fd-d134f6d76fc5\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"75cafef3-0aa9-4b35-b2da-93a930aabef3"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindCommandExecuted\"\t, \r\n\t\"SourceIdentifier\":\"b64751ab-012a-4d4c-b68c-f26792050448\"\t, \r\n\t\"Identifier\":\"75cafef3-0aa9-4b35-b2da-93a930aabef3\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"7c8eddae-c856-41a4-b393-680c53c1f4ed"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindButtonToCommand\"\t, \r\n\t\"SourceIdentifier\":\"b64751ab-012a-4d4c-b68c-f26792050448\"\t, \r\n\t\"Identifier\":\"7c8eddae-c856-41a4-b393-680c53c1f4ed\"\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Order\":0}\r\n"				}
, 				{
					"Identifier":"63cf3a9a-d66d-4f0b-928c-7bad8798defd"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindProperty\"\t, \r\n\t\"SourceIdentifier\":\"d5bd36a0-9e79-40c6-810e-c42872038f1b\"\t, \r\n\t\"Identifier\":\"63cf3a9a-d66d-4f0b-928c-7bad8798defd\"\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Order\":1}\r\n"				}
, 				{
					"Identifier":"fe480b5f-02bf-4f1a-b66c-3712ae58c2b8"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindProperty\"\t, \r\n\t\"SourceIdentifier\":\"df0cfeb3-f21b-485a-bf95-d0538c1480d1\"\t, \r\n\t\"Identifier\":\"fe480b5f-02bf-4f1a-b66c-3712ae58c2b8\"\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Order\":2}\r\n"				}
, 				{
					"Identifier":"12c63f56-1157-47be-a371-87d4498c41ac"					, 
					"Data":"{\r\n\t\"BindingName\":\"BindProperty\"\t, \r\n\t\"SourceIdentifier\":\"e7fea2a7-0302-40f6-9eb4-db01a606bc1b\"\t, \r\n\t\"Identifier\":\"12c63f56-1157-47be-a371-87d4498c41ac\"\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"Order\":3}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.Editor.Graphs.Data.ConnectionData"			, 
			"Records":[ 
				{
					"Identifier":"0835a552-e0c7-4fdc-817e-cc744ffb8335"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"InputIdentifier\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"Identifier\":\"0835a552-e0c7-4fdc-817e-cc744ffb8335\"}\r\n"				}
, 				{
					"Identifier":"0d915a04-1d42-4d52-90de-5d04e7fb0171"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"InputIdentifier\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"Identifier\":\"0d915a04-1d42-4d52-90de-5d04e7fb0171\"}\r\n"				}
, 				{
					"Identifier":"2650ce1b-d764-4309-86ab-d64388b1aae5"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"InputIdentifier\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"Identifier\":\"2650ce1b-d764-4309-86ab-d64388b1aae5\"}\r\n"				}
, 				{
					"Identifier":"93d0ddad-173c-4ca6-bc75-9450ac1e2215"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"InputIdentifier\":\"513f140b-c61d-4d6c-9c98-ab26a24403de\"\t, \r\n\t\"Identifier\":\"93d0ddad-173c-4ca6-bc75-9450ac1e2215\"}\r\n"				}
, 				{
					"Identifier":"b79d8fb9-24e1-4ecf-93a1-cecaa2470d28"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"InputIdentifier\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Identifier\":\"b79d8fb9-24e1-4ecf-93a1-cecaa2470d28\"}\r\n"				}
, 				{
					"Identifier":"bc372750-7385-48d4-b3f7-95c4957f8abb"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"InputIdentifier\":\"b921dfaa-1535-4807-b6b4-cb028e342b6d\"\t, \r\n\t\"Identifier\":\"bc372750-7385-48d4-b3f7-95c4957f8abb\"}\r\n"				}
, 				{
					"Identifier":"c5636ad6-3d94-4366-8025-8f593a5d1ff7"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"InputIdentifier\":\"07656e2a-e9d7-4c53-8530-64673cf1383f\"\t, \r\n\t\"Identifier\":\"c5636ad6-3d94-4366-8025-8f593a5d1ff7\"}\r\n"				}
, 				{
					"Identifier":"d5543d90-2420-4d01-919d-28ad67735b9f"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"InputIdentifier\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"Identifier\":\"d5543d90-2420-4d01-919d-28ad67735b9f\"}\r\n"				}
, 				{
					"Identifier":"e027ad87-dffb-43fd-b5f5-f9da2b42c037"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"InputIdentifier\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"Identifier\":\"e027ad87-dffb-43fd-b5f5-f9da2b42c037\"}\r\n"				}
, 				{
					"Identifier":"e2c0cdcc-0023-46a7-b8d0-9f1ae629522b"					, 
					"Data":"{\r\n\t\"OutputIdentifier\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"InputIdentifier\":\"f27db558-b020-4846-bce2-9044b0449af1\"\t, \r\n\t\"Identifier\":\"e2c0cdcc-0023-46a7-b8d0-9f1ae629522b\"}\r\n"				}
 ]
		}
, 		{
			"Type":"uFrame.Editor.Graphs.Data.FilterItem"			, 
			"Records":[ 
				{
					"Identifier":"0a731bd0-1afc-46ac-903b-80966558c27a"					, 
					"Data":"{\r\n\t\"Identifier\":\"0a731bd0-1afc-46ac-903b-80966558c27a\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"FilterId\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":0\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"0bafef34-7799-44b7-8fa4-689472773eca"					, 
					"Data":"{\r\n\t\"Identifier\":\"0bafef34-7799-44b7-8fa4-689472773eca\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"230c68c4-4bea-46a6-9d68-a92587eb4bc2\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":504\t}\r\n}\r\n"				}
, 				{
					"Identifier":"0fe8e105-6c66-4740-9050-4cc4f286b8d7"					, 
					"Data":"{\r\n\t\"Identifier\":\"0fe8e105-6c66-4740-9050-4cc4f286b8d7\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"1c901bcc-dd24-4533-803f-096859348542\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":456\t}\r\n}\r\n"				}
, 				{
					"Identifier":"414b0015-a880-4e24-b4cc-78587e073438"					, 
					"Data":"{\r\n\t\"Identifier\":\"414b0015-a880-4e24-b4cc-78587e073438\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"91d8586a-db5c-46b3-b080-8bd61e5f258f\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":168\t}\r\n}\r\n"				}
, 				{
					"Identifier":"41a41ffe-0d3c-4799-ace8-97a3b7846768"					, 
					"Data":"{\r\n\t\"Identifier\":\"41a41ffe-0d3c-4799-ace8-97a3b7846768\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"c2c5dcea-2b91-4d7b-8a9f-d2ebbd0ec6e0\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"450cc643-910d-44a2-9eda-efcd7b2b8faa"					, 
					"Data":"{\r\n\t\"Identifier\":\"450cc643-910d-44a2-9eda-efcd7b2b8faa\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"cc06b016-4af8-4d57-b7b4-f0a9701895bc\"\t, \r\n\t\"FilterId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":444\t\t, \r\n\t\t\"y\":204\t}\r\n}\r\n"				}
, 				{
					"Identifier":"4e562e73-907e-4d45-a76b-799a11665df3"					, 
					"Data":"{\r\n\t\"Identifier\":\"4e562e73-907e-4d45-a76b-799a11665df3\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"b048c389-cb22-4950-bf01-baeecb3f5b59\"\t, \r\n\t\"FilterId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":600\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"50614c58-0f76-4254-8210-4d6f169a6a2c"					, 
					"Data":"{\r\n\t\"Identifier\":\"50614c58-0f76-4254-8210-4d6f169a6a2c\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"FilterId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":900\t\t, \r\n\t\t\"y\":348\t}\r\n}\r\n"				}
, 				{
					"Identifier":"5396aec0-dab9-4036-8196-f9006fc3b501"					, 
					"Data":"{\r\n\t\"Identifier\":\"5396aec0-dab9-4036-8196-f9006fc3b501\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"83db4606-e238-47e7-84b5-140244a73854\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":12\t\t, \r\n\t\t\"y\":204\t}\r\n}\r\n"				}
, 				{
					"Identifier":"57805d28-6bb5-4351-b538-2268ca0ec691"					, 
					"Data":"{\r\n\t\"Identifier\":\"57805d28-6bb5-4351-b538-2268ca0ec691\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"ae3b9b65-f6e1-4ae2-aa60-9bc0b2214f11\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":264\t}\r\n}\r\n"				}
, 				{
					"Identifier":"588b8a6e-3e59-4d0f-b4f2-e5d581381d18"					, 
					"Data":"{\r\n\t\"Identifier\":\"588b8a6e-3e59-4d0f-b4f2-e5d581381d18\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"e9242609-d672-4d2d-afa1-430480dbed76\"\t, \r\n\t\"FilterId\":\"e9242609-d672-4d2d-afa1-430480dbed76\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":0\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"7203089d-5be8-4519-9b01-36c52866270a"					, 
					"Data":"{\r\n\t\"Identifier\":\"7203089d-5be8-4519-9b01-36c52866270a\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":888\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"7710cdc8-ce2d-4d64-851c-eb322191021d"					, 
					"Data":"{\r\n\t\"Identifier\":\"7710cdc8-ce2d-4d64-851c-eb322191021d\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"38c8e0e8-8eed-4bcd-b6eb-b0bcf404cdb3\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":720\t\t, \r\n\t\t\"y\":72\t}\r\n}\r\n"				}
, 				{
					"Identifier":"862cdd13-9eb5-4711-8db8-3a0b8bf2363d"					, 
					"Data":"{\r\n\t\"Identifier\":\"862cdd13-9eb5-4711-8db8-3a0b8bf2363d\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"FilterId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":12\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"86980e3c-22b8-4dbf-9bed-e649ba6657da"					, 
					"Data":"{\r\n\t\"Identifier\":\"86980e3c-22b8-4dbf-9bed-e649ba6657da\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"FilterId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":768\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"90ff264c-8f48-4881-862b-92ce548e5f8e"					, 
					"Data":"{\r\n\t\"Identifier\":\"90ff264c-8f48-4881-862b-92ce548e5f8e\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"955007ed-3378-401e-a3ba-18e8c6ab0a33\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":408\t}\r\n}\r\n"				}
, 				{
					"Identifier":"921009ef-79c7-4a56-b57d-6a741107c39a"					, 
					"Data":"{\r\n\t\"Identifier\":\"921009ef-79c7-4a56-b57d-6a741107c39a\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"FilterId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":12\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"92a085f4-5608-4085-b860-ecee10ccf52a"					, 
					"Data":"{\r\n\t\"Identifier\":\"92a085f4-5608-4085-b860-ecee10ccf52a\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"2ac6ace5-68c1-499a-ac20-bfd96c5f63fc\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":228\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"98b9e054-2ef3-45ff-86b3-edef9fd94b33"					, 
					"Data":"{\r\n\t\"Identifier\":\"98b9e054-2ef3-45ff-86b3-edef9fd94b33\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"dcede665-815a-4897-b459-ba70cf211cf0\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":312\t}\r\n}\r\n"				}
, 				{
					"Identifier":"99308b02-3248-4b3d-9d8f-9c04f0c2397d"					, 
					"Data":"{\r\n\t\"Identifier\":\"99308b02-3248-4b3d-9d8f-9c04f0c2397d\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"b5985a77-63c6-4202-ae04-e1b37829b60f\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":1068\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"a487c4cb-ae35-49f8-9e88-8d679aa1d2cc"					, 
					"Data":"{\r\n\t\"Identifier\":\"a487c4cb-ae35-49f8-9e88-8d679aa1d2cc\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":1068\t\t, \r\n\t\t\"y\":348\t}\r\n}\r\n"				}
, 				{
					"Identifier":"ad84ac3f-b43c-4b1a-9b4c-4e2a6d056c87"					, 
					"Data":"{\r\n\t\"Identifier\":\"ad84ac3f-b43c-4b1a-9b4c-4e2a6d056c87\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"FilterId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":900\t\t, \r\n\t\t\"y\":204\t}\r\n}\r\n"				}
, 				{
					"Identifier":"b4a10c5e-d82e-4336-9d9f-5198d347cd0c"					, 
					"Data":"{\r\n\t\"Identifier\":\"b4a10c5e-d82e-4336-9d9f-5198d347cd0c\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"9dc6a383-c3c7-4d6d-ad9c-bd101253ba12\"\t, \r\n\t\"FilterId\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":324\t\t, \r\n\t\t\"y\":24\t}\r\n}\r\n"				}
, 				{
					"Identifier":"ba3de839-8ecd-4405-abc4-9587987f3453"					, 
					"Data":"{\r\n\t\"Identifier\":\"ba3de839-8ecd-4405-abc4-9587987f3453\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":12\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"ca2924ac-646f-4dcf-82ba-eb22db3d703f"					, 
					"Data":"{\r\n\t\"Identifier\":\"ca2924ac-646f-4dcf-82ba-eb22db3d703f\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"683f68c2-6f50-4b9d-8024-bb9bdc861316\"\t, \r\n\t\"FilterId\":\"f0162696-b680-45e5-ab78-bf099f943e7b\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":900\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"cb18e7b5-7f72-4686-bfa8-626a51e8bd96"					, 
					"Data":"{\r\n\t\"Identifier\":\"cb18e7b5-7f72-4686-bfa8-626a51e8bd96\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"20c366e6-3ce3-4a37-a86d-3a3122f9fbca\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":216\t}\r\n}\r\n"				}
, 				{
					"Identifier":"ce338c9c-b1e8-4767-814d-5c065aad5577"					, 
					"Data":"{\r\n\t\"Identifier\":\"ce338c9c-b1e8-4767-814d-5c065aad5577\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"1ef593ac-e839-419f-9429-85a87be7b543\"\t, \r\n\t\"FilterId\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":348\t\t, \r\n\t\t\"y\":120\t}\r\n}\r\n"				}
, 				{
					"Identifier":"d1bb4638-9669-4836-b942-d5ce8ca8c058"					, 
					"Data":"{\r\n\t\"Identifier\":\"d1bb4638-9669-4836-b942-d5ce8ca8c058\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"33195130-6e54-4625-a8b4-d4278894e655\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":1068\t\t, \r\n\t\t\"y\":204\t}\r\n}\r\n"				}
, 				{
					"Identifier":"d40af46d-293a-476e-b627-886f88b37a25"					, 
					"Data":"{\r\n\t\"Identifier\":\"d40af46d-293a-476e-b627-886f88b37a25\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"e9242609-d672-4d2d-afa1-430480dbed76\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":12\t\t, \r\n\t\t\"y\":108\t}\r\n}\r\n"				}
, 				{
					"Identifier":"d7e5b3c3-7735-45a4-8877-e922a226ff15"					, 
					"Data":"{\r\n\t\"Identifier\":\"d7e5b3c3-7735-45a4-8877-e922a226ff15\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"FilterId\":\"508800b4-4676-42c1-a0de-55df0372e305\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":0\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"de1e1e75-522b-41ed-b0ed-0d326323ef05"					, 
					"Data":"{\r\n\t\"Identifier\":\"de1e1e75-522b-41ed-b0ed-0d326323ef05\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"a836080f-6fa7-45e1-8276-e21efec691c9\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":120\t}\r\n}\r\n"				}
, 				{
					"Identifier":"e675d8f4-5133-40ae-90fb-bb3c4fb0b0f5"					, 
					"Data":"{\r\n\t\"Identifier\":\"e675d8f4-5133-40ae-90fb-bb3c4fb0b0f5\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"b4799974-1e0d-4f4e-98bd-d9c31949d7e5\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":360\t}\r\n}\r\n"				}
, 				{
					"Identifier":"ec7989d0-22a2-4f29-94fe-2e3c9095a100"					, 
					"Data":"{\r\n\t\"Identifier\":\"ec7989d0-22a2-4f29-94fe-2e3c9095a100\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"3b304ebb-af46-44ac-bf99-1630604bec7c\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":72\t}\r\n}\r\n"				}
, 				{
					"Identifier":"f3d2dec4-6aeb-4264-bb33-daebbb7a60aa"					, 
					"Data":"{\r\n\t\"Identifier\":\"f3d2dec4-6aeb-4264-bb33-daebbb7a60aa\"\t, \r\n\t\"Collapsed\":false\t, \r\n\t\"NodeId\":\"83db4606-e238-47e7-84b5-140244a73854\"\t, \r\n\t\"FilterId\":\"83db4606-e238-47e7-84b5-140244a73854\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":0\t\t, \r\n\t\t\"y\":0\t}\r\n}\r\n"				}
, 				{
					"Identifier":"fb952139-9f6e-4ee6-9159-db4f43cccdcc"					, 
					"Data":"{\r\n\t\"Identifier\":\"fb952139-9f6e-4ee6-9159-db4f43cccdcc\"\t, \r\n\t\"Collapsed\":true\t, \r\n\t\"NodeId\":\"524474b3-4f31-46f7-b66a-38dc9cf6533d\"\t, \r\n\t\"FilterId\":\"26e197e6-f817-4b8a-8e99-4ce471707cde\"\t, \r\n\t\"Position\":\t{\r\n\t\t\"x\":480\t\t, \r\n\t\t\"y\":552\t}\r\n}\r\n"				}
 ]
		}
 ]
	, 
	"CodeFiles":[ 
		{
			"RelativePath":"/WorldSystem/ViewModelCommands.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class ReSpawnCommand : uFrame.MVVM.ViewModels.ViewModelCommand {\r\n        \r\n        private String _Password;\r\n        \r\n        public String Password {\r\n            get {\r\n                return _Password;\r\n            }\r\n            set {\r\n                _Password = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModelCommands/ReSpawnCommand.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class RespawnCommand {\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels.designer/FoodViewModel.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class FoodViewModelBase : EntityCommonViewModel {\r\n        \r\n        public FoodViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n        }\r\n        \r\n        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Read(stream);\r\n        }\r\n        \r\n        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Write(stream);\r\n        }\r\n        \r\n        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {\r\n            base.FillCommands(list);\r\n        }\r\n        \r\n        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {\r\n            base.FillProperties(list);\r\n        }\r\n    }\r\n    \r\n    public partial class FoodViewModel {\r\n        \r\n        public FoodViewModel(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels/FoodViewModel.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class FoodViewModel : FoodViewModelBase {\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers.designer/FoodController.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class FoodControllerBase : EntityCommonController {\r\n        \r\n        private uFrame.MVVM.ViewModels.IViewModelManager<FoodViewModel> _FoodViewModelManager;\r\n        \r\n        [uFrame.IOC.InjectAttribute(\"Food\")]\r\n        public uFrame.MVVM.ViewModels.IViewModelManager<FoodViewModel> FoodViewModelManager {\r\n            get {\r\n                return _FoodViewModelManager;\r\n            }\r\n            set {\r\n                _FoodViewModelManager = value;\r\n            }\r\n        }\r\n        \r\n        public IEnumerable<FoodViewModel> FoodViewModels {\r\n            get {\r\n                return (FoodViewModelManager as uFrame.MVVM.ViewModels.IViewModelManager<FoodViewModel>).ViewModels;\r\n            }\r\n        }\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n            // This is called when the controller is created\r\n        }\r\n        \r\n        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.Initialize(viewModel);\r\n            // This is called when a viewmodel is created\r\n            this.InitializeFood(((FoodViewModel)(viewModel)));\r\n        }\r\n        \r\n        public virtual FoodViewModel CreateFood() {\r\n            return ((FoodViewModel)(this.Create(Guid.NewGuid().ToString())));\r\n        }\r\n        \r\n        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {\r\n            return new FoodViewModel(this.EventAggregator);\r\n        }\r\n        \r\n        public virtual void InitializeFood(FoodViewModel viewModel) {\r\n            // This is called when a FoodViewModel is created\r\n            FoodViewModelManager.Add(viewModel);\r\n        }\r\n        \r\n        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.DisposingViewModel(viewModel);\r\n            FoodViewModelManager.Remove(viewModel);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers/FoodController.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class FoodController : FoodControllerBase {\r\n        \r\n        public override void InitializeFood(FoodViewModel viewModel) {\r\n            base.InitializeFood(viewModel);\r\n            // This is called when a FoodViewModel is created\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels.designer/SmashViewModel.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class SmashViewModelBase : EntityCommonViewModel {\r\n        \r\n        public SmashViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n        }\r\n        \r\n        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Read(stream);\r\n        }\r\n        \r\n        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Write(stream);\r\n        }\r\n        \r\n        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {\r\n            base.FillCommands(list);\r\n        }\r\n        \r\n        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {\r\n            base.FillProperties(list);\r\n        }\r\n    }\r\n    \r\n    public partial class SmashViewModel {\r\n        \r\n        public SmashViewModel(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels/SmashViewModel.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class SmashViewModel : SmashViewModelBase {\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers.designer/SmashController.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class SmashControllerBase : EntityCommonController {\r\n        \r\n        private uFrame.MVVM.ViewModels.IViewModelManager<SmashViewModel> _SmashViewModelManager;\r\n        \r\n        [uFrame.IOC.InjectAttribute(\"Smash\")]\r\n        public uFrame.MVVM.ViewModels.IViewModelManager<SmashViewModel> SmashViewModelManager {\r\n            get {\r\n                return _SmashViewModelManager;\r\n            }\r\n            set {\r\n                _SmashViewModelManager = value;\r\n            }\r\n        }\r\n        \r\n        public IEnumerable<SmashViewModel> SmashViewModels {\r\n            get {\r\n                return (SmashViewModelManager as uFrame.MVVM.ViewModels.IViewModelManager<SmashViewModel>).ViewModels;\r\n            }\r\n        }\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n            // This is called when the controller is created\r\n        }\r\n        \r\n        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.Initialize(viewModel);\r\n            // This is called when a viewmodel is created\r\n            this.InitializeSmash(((SmashViewModel)(viewModel)));\r\n        }\r\n        \r\n        public virtual SmashViewModel CreateSmash() {\r\n            return ((SmashViewModel)(this.Create(Guid.NewGuid().ToString())));\r\n        }\r\n        \r\n        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {\r\n            return new SmashViewModel(this.EventAggregator);\r\n        }\r\n        \r\n        public virtual void InitializeSmash(SmashViewModel viewModel) {\r\n            // This is called when a SmashViewModel is created\r\n            SmashViewModelManager.Add(viewModel);\r\n        }\r\n        \r\n        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.DisposingViewModel(viewModel);\r\n            SmashViewModelManager.Remove(viewModel);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers/SmashController.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class SmashController : SmashControllerBase {\r\n        \r\n        public override void InitializeSmash(SmashViewModel viewModel) {\r\n            base.InitializeSmash(viewModel);\r\n            // This is called when a SmashViewModel is created\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels.designer/AvatarViewModel.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class AvatarViewModelBase : EntityCommonViewModel {\r\n        \r\n        private P<String> _nameProperty;\r\n        \r\n        private P<Double> _moveSpeedProperty;\r\n        \r\n        private Signal<ReSpawnCommand> _ReSpawn;\r\n        \r\n        public AvatarViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n        \r\n        public virtual P<String> nameProperty {\r\n            get {\r\n                return _nameProperty;\r\n            }\r\n            set {\r\n                _nameProperty = value;\r\n            }\r\n        }\r\n        \r\n        public virtual P<Double> moveSpeedProperty {\r\n            get {\r\n                return _moveSpeedProperty;\r\n            }\r\n            set {\r\n                _moveSpeedProperty = value;\r\n            }\r\n        }\r\n        \r\n        public virtual String name {\r\n            get {\r\n                return nameProperty.Value;\r\n            }\r\n            set {\r\n                nameProperty.Value = value;\r\n            }\r\n        }\r\n        \r\n        public virtual Double moveSpeed {\r\n            get {\r\n                return moveSpeedProperty.Value;\r\n            }\r\n            set {\r\n                moveSpeedProperty.Value = value;\r\n            }\r\n        }\r\n        \r\n        public virtual Signal<ReSpawnCommand> ReSpawn {\r\n            get {\r\n                return _ReSpawn;\r\n            }\r\n            set {\r\n                _ReSpawn = value;\r\n            }\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            this.ReSpawn = new Signal<ReSpawnCommand>(this);\r\n            _nameProperty = new P<String>(this, \"name\");\r\n            _moveSpeedProperty = new P<Double>(this, \"moveSpeed\");\r\n        }\r\n        \r\n        public virtual void Execute(ReSpawnCommand argument) {\r\n            this.ReSpawn.OnNext(argument);\r\n        }\r\n        \r\n        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Read(stream);\r\n            this.name = stream.DeserializeString(\"name\");;\r\n            this.moveSpeed = stream.DeserializeDouble(\"moveSpeed\");;\r\n        }\r\n        \r\n        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Write(stream);\r\n            stream.SerializeString(\"name\", this.name);\r\n            stream.SerializeDouble(\"moveSpeed\", this.moveSpeed);\r\n        }\r\n        \r\n        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {\r\n            base.FillCommands(list);\r\n            list.Add(new ViewModelCommandInfo(\"ReSpawn\", ReSpawn) { ParameterType = typeof(ReSpawnCommand) });\r\n        }\r\n        \r\n        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {\r\n            base.FillProperties(list);\r\n            // PropertiesChildItem\r\n            list.Add(new ViewModelPropertyInfo(_nameProperty, false, false, false, false));\r\n            // PropertiesChildItem\r\n            list.Add(new ViewModelPropertyInfo(_moveSpeedProperty, false, false, false, false));\r\n        }\r\n    }\r\n    \r\n    public partial class AvatarViewModel {\r\n        \r\n        public AvatarViewModel(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels/AvatarViewModel.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    using KBEngine;\r\n    \r\n    \r\n    public partial class AvatarViewModel : AvatarViewModelBase {\r\n        public override void Bind()\r\n        {\r\n            base.Bind();\r\n        }\r\n\r\n        public override void __init__()\r\n        {\r\n            base.__init__();\r\n            if (isPlayer())\r\n            {\r\n                KBEngine.Event.registerIn(\"relive\", this, \"relive\");\r\n                KBEngine.Event.registerIn(\"updatePlayer\", this, \"updatePlayer\");\r\n\r\n                // ������½�ɹ��¼�\r\n                //KBEngine.Event.fireOut(\"onLoginSuccessfully\", new object[] { KBEngineApp.app.entity_uuid, id, this });\r\n                Aggregator.Publish(new OnLoginSuccessfullyEvent());\r\n            }\r\n        }\r\n\r\n        public override void OnPropertyChanged(object sender, string propertyName)\r\n        {\r\n            base.OnPropertyChanged(sender, propertyName);\r\n            this.Execute(new ReSpawnCommand());\r\n        }\r\n\r\n        public void relive(Byte type)\r\n        {\r\n            cellCall(\"relive\", type);\r\n        }\r\n\r\n        public void updatePlayer(float x, float y, float z, float yaw)\r\n        {\r\n            position.x = x;\r\n            position.y = y;\r\n            position.z = z;\r\n\r\n            direction.z = yaw;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers.designer/AvatarController.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class AvatarControllerBase : EntityCommonController {\r\n        \r\n        private uFrame.MVVM.ViewModels.IViewModelManager<AvatarViewModel> _AvatarViewModelManager;\r\n        \r\n        [uFrame.IOC.InjectAttribute(\"Avatar\")]\r\n        public uFrame.MVVM.ViewModels.IViewModelManager<AvatarViewModel> AvatarViewModelManager {\r\n            get {\r\n                return _AvatarViewModelManager;\r\n            }\r\n            set {\r\n                _AvatarViewModelManager = value;\r\n            }\r\n        }\r\n        \r\n        public IEnumerable<AvatarViewModel> AvatarViewModels {\r\n            get {\r\n                return (AvatarViewModelManager as uFrame.MVVM.ViewModels.IViewModelManager<AvatarViewModel>).ViewModels;\r\n            }\r\n        }\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n            // This is called when the controller is created\r\n        }\r\n        \r\n        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.Initialize(viewModel);\r\n            // This is called when a viewmodel is created\r\n            this.InitializeAvatar(((AvatarViewModel)(viewModel)));\r\n        }\r\n        \r\n        public virtual AvatarViewModel CreateAvatar() {\r\n            return ((AvatarViewModel)(this.Create(Guid.NewGuid().ToString())));\r\n        }\r\n        \r\n        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {\r\n            return new AvatarViewModel(this.EventAggregator);\r\n        }\r\n        \r\n        public virtual void InitializeAvatar(AvatarViewModel viewModel) {\r\n            // This is called when a AvatarViewModel is created\r\n            viewModel.ReSpawn.Action = this.ReSpawnHandler;\r\n            AvatarViewModelManager.Add(viewModel);\r\n        }\r\n        \r\n        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.DisposingViewModel(viewModel);\r\n            AvatarViewModelManager.Remove(viewModel);\r\n        }\r\n        \r\n        public virtual void ReSpawnHandler(ReSpawnCommand command) {\r\n            this.ReSpawn(command.Sender as AvatarViewModel, command);\r\n        }\r\n        \r\n        public virtual void ReSpawn(AvatarViewModel viewModel, ReSpawnCommand arg) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers/AvatarController.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    \r\n    \r\n    public class AvatarController : AvatarControllerBase {\r\n        \r\n        public override void InitializeAvatar(AvatarViewModel viewModel) {\r\n            base.InitializeAvatar(viewModel);\r\n            // This is called when a AvatarViewModel is created\r\n        }\r\n\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels.designer/EntityCommonViewModel.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public partial class EntityCommonViewModelBase : uFrame.MVVM.ViewModels.ViewModel {\r\n        \r\n        private P<Vector3> _PositionProperty;\r\n        \r\n        private P<Vector3> _DirectionProperty;\r\n        \r\n        private P<Int32> _modelIDProperty;\r\n        \r\n        public EntityCommonViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n        \r\n        public virtual P<Vector3> PositionProperty {\r\n            get {\r\n                return _PositionProperty;\r\n            }\r\n            set {\r\n                _PositionProperty = value;\r\n            }\r\n        }\r\n        \r\n        public virtual P<Vector3> DirectionProperty {\r\n            get {\r\n                return _DirectionProperty;\r\n            }\r\n            set {\r\n                _DirectionProperty = value;\r\n            }\r\n        }\r\n        \r\n        public virtual P<Int32> modelIDProperty {\r\n            get {\r\n                return _modelIDProperty;\r\n            }\r\n            set {\r\n                _modelIDProperty = value;\r\n            }\r\n        }\r\n        \r\n        public virtual Vector3 Position {\r\n            get {\r\n                return PositionProperty.Value;\r\n            }\r\n            set {\r\n                PositionProperty.Value = value;\r\n            }\r\n        }\r\n        \r\n        public virtual Vector3 Direction {\r\n            get {\r\n                return DirectionProperty.Value;\r\n            }\r\n            set {\r\n                DirectionProperty.Value = value;\r\n            }\r\n        }\r\n        \r\n        public virtual Int32 modelID {\r\n            get {\r\n                return modelIDProperty.Value;\r\n            }\r\n            set {\r\n                modelIDProperty.Value = value;\r\n            }\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            _PositionProperty = new P<Vector3>(this, \"Position\");\r\n            _DirectionProperty = new P<Vector3>(this, \"Direction\");\r\n            _modelIDProperty = new P<Int32>(this, \"modelID\");\r\n        }\r\n        \r\n        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Read(stream);\r\n            this.Position = stream.DeserializeVector3(\"Position\");;\r\n            this.Direction = stream.DeserializeVector3(\"Direction\");;\r\n            this.modelID = stream.DeserializeInt(\"modelID\");;\r\n        }\r\n        \r\n        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {\r\n            base.Write(stream);\r\n            stream.SerializeVector3(\"Position\", this.Position);\r\n            stream.SerializeVector3(\"Direction\", this.Direction);\r\n            stream.SerializeInt(\"modelID\", this.modelID);\r\n        }\r\n        \r\n        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {\r\n            base.FillCommands(list);\r\n        }\r\n        \r\n        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {\r\n            base.FillProperties(list);\r\n            // PropertiesChildItem\r\n            list.Add(new ViewModelPropertyInfo(_PositionProperty, false, false, false, false));\r\n            // PropertiesChildItem\r\n            list.Add(new ViewModelPropertyInfo(_DirectionProperty, false, false, false, false));\r\n            // PropertiesChildItem\r\n            list.Add(new ViewModelPropertyInfo(_modelIDProperty, false, false, false, false));\r\n        }\r\n    }\r\n    \r\n    public partial class EntityCommonViewModel {\r\n        \r\n        public EntityCommonViewModel(uFrame.Kernel.IEventAggregator aggregator) : \r\n                base(aggregator) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/ViewModels/EntityCommonViewModel.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    using KBEngine;\r\n    \r\n    \r\n    public partial class EntityCommonViewModel : EntityCommonViewModelBase {\r\n        public override void Bind()\r\n        {\r\n            base.Bind();\r\n        }\r\n\r\n        public override void __init__()\r\n        {\r\n            base.__init__();\r\n        }\r\n\r\n        public override void onDestroy()\r\n        {\r\n            if (isPlayer())\r\n                KBEngine.Event.deregisterIn(this);\r\n        }\r\n\r\n        public override void onEnterWorld()\r\n        {\r\n            base.onEnterWorld();\r\n            if (isPlayer())\r\n                Aggregator.Publish(new OnAvatarEnterWorldEvent() { Entity = this });\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers.designer/EntityCommonController.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class EntityCommonControllerBase : uFrame.MVVM.Controller {\r\n        \r\n        private uFrame.MVVM.ViewModels.IViewModelManager<EntityCommonViewModel> _EntityCommonViewModelManager;\r\n        \r\n        [uFrame.IOC.InjectAttribute(\"EntityCommon\")]\r\n        public uFrame.MVVM.ViewModels.IViewModelManager<EntityCommonViewModel> EntityCommonViewModelManager {\r\n            get {\r\n                return _EntityCommonViewModelManager;\r\n            }\r\n            set {\r\n                _EntityCommonViewModelManager = value;\r\n            }\r\n        }\r\n        \r\n        public IEnumerable<EntityCommonViewModel> EntityCommonViewModels {\r\n            get {\r\n                return (EntityCommonViewModelManager as uFrame.MVVM.ViewModels.IViewModelManager<EntityCommonViewModel>).ViewModels;\r\n            }\r\n        }\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n            // This is called when the controller is created\r\n        }\r\n        \r\n        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.Initialize(viewModel);\r\n            // This is called when a viewmodel is created\r\n            this.InitializeEntityCommon(((EntityCommonViewModel)(viewModel)));\r\n        }\r\n        \r\n        public virtual EntityCommonViewModel CreateEntityCommon() {\r\n            return ((EntityCommonViewModel)(this.Create(Guid.NewGuid().ToString())));\r\n        }\r\n        \r\n        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {\r\n            return new EntityCommonViewModel(this.EventAggregator);\r\n        }\r\n        \r\n        public virtual void InitializeEntityCommon(EntityCommonViewModel viewModel) {\r\n            // This is called when a EntityCommonViewModel is created\r\n            EntityCommonViewModelManager.Add(viewModel);\r\n        }\r\n        \r\n        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {\r\n            base.DisposingViewModel(viewModel);\r\n            EntityCommonViewModelManager.Remove(viewModel);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Controllers/EntityCommonController.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class EntityCommonController : EntityCommonControllerBase {\r\n        \r\n        public override void InitializeEntityCommon(EntityCommonViewModel viewModel) {\r\n            base.InitializeEntityCommon(viewModel);\r\n            // This is called when a EntityCommonViewModel is created\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Services.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class LoginServiceBase : uFrame.Kernel.SystemServiceMonoBehavior {\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n            this.OnEvent<AvatarViewModel>().Subscribe(this.AvatarHandler);\r\n        }\r\n        \r\n        public virtual void AvatarHandler(AvatarViewModel data) {\r\n        }\r\n    }\r\n    \r\n    public class WorldViewServiceBase : uFrame.Kernel.SystemServiceMonoBehavior {\r\n        \r\n        public override void Setup() {\r\n            base.Setup();\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Services/LoginService.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    using UnityEngine.SceneManagement;\r\n    using KBEngine;\r\n    \r\n    \r\n    public class LoginService : LoginServiceBase {\r\n        \r\n        /// <summary>\r\n        /// This method is invoked whenever the kernel is loading\r\n        /// Since the kernel lives throughout the entire lifecycle  of the game, this will only be invoked once.\r\n        /// </summary>\r\n        public override void Setup() {\r\n            base.Setup();\r\n            // Use the line below to subscribe to events\r\n            // this.OnEvent<MyEvent>().Subscribe(myEventInstance => { TODO });\r\n        }\r\n\r\n        public static LoginService inst;\r\n\r\n        public int ui_state = 0;\r\n        private string stringAccount = \"\";\r\n        private string stringPasswd = \"\";\r\n        private string labelMsg = \"\";\r\n        private Color labelColor = Color.green;\r\n\r\n        // ��ɫ���\r\n        private int mass = 0;\r\n        private int level = 0;\r\n\r\n        public bool showReliveGUI = false;\r\n\r\n        protected override void Start()\r\n        {\r\n            inst = this;\r\n            InstallEvents();\r\n        }\r\n\r\n        void InstallEvents()\r\n        {\r\n            this.OnEvent<OnLoginSuccessfullyEvent>().ObserveOnMainThread().Subscribe(OnLoginSuccessfully);\r\n\r\n            // common\r\n            KBEngine.Event.registerOut(\"onKicked\", this, \"onKicked\");\r\n            KBEngine.Event.registerOut(\"onDisconnected\", this, \"onDisconnected\");\r\n            KBEngine.Event.registerOut(\"onConnectionState\", this, \"onConnectionState\");\r\n            // login\r\n            KBEngine.Event.registerOut(\"onCreateAccountResult\", this, \"onCreateAccountResult\");\r\n            KBEngine.Event.registerOut(\"onLoginFailed\", this, \"onLoginFailed\");\r\n            KBEngine.Event.registerOut(\"onVersionNotMatch\", this, \"onVersionNotMatch\");\r\n            KBEngine.Event.registerOut(\"onScriptVersionNotMatch\", this, \"onScriptVersionNotMatch\");\r\n            KBEngine.Event.registerOut(\"onLoginBaseappFailed\", this, \"onLoginBaseappFailed\");\r\n            KBEngine.Event.registerOut(\"onLoginBaseapp\", this, \"onLoginBaseapp\");\r\n            KBEngine.Event.registerOut(\"Loginapp_importClientMessages\", this, \"Loginapp_importClientMessages\");\r\n            KBEngine.Event.registerOut(\"Baseapp_importClientMessages\", this, \"Baseapp_importClientMessages\");\r\n            KBEngine.Event.registerOut(\"Baseapp_importClientEntityDef\", this, \"Baseapp_importClientEntityDef\");\r\n        }\r\n\r\n        protected override void OnDestroy()\r\n        {\r\n            KBEngine.Event.deregisterOut(this);\r\n            base.OnDestroy();\r\n        }\r\n\r\n        void Update()\r\n        {\r\n            if (Input.GetKeyUp(KeyCode.Space))\r\n            {\r\n                Debug.Log(\"KeyCode.Space\");\r\n            }\r\n        }\r\n\r\n        void onLoginUI()\r\n        {\r\n            if (GUI.Button(new Rect(Screen.width / 2 - 100, Screen.height / 2 + 30, 200, 30), \"Login(��½)\"))\r\n            {\r\n                Debug.Log(\"stringAccount:\" + stringAccount);\r\n                Debug.Log(\"stringPasswd:\" + stringPasswd);\r\n\r\n                if (stringAccount.Length > 0 && stringPasswd.Length > 5)\r\n                {\r\n                    login();\r\n                }\r\n                else\r\n                {\r\n                    err(\"account or password is error, length < 6!(�˺Ż���������󣬳��ȱ������5!)\");\r\n                }\r\n            }\r\n\r\n            if (GUI.Button(new Rect(Screen.width / 2 - 100, Screen.height / 2 + 70, 200, 30), \"CreateAccount(ע���˺�)\"))\r\n            {\r\n                Debug.Log(\"stringAccount:\" + stringAccount);\r\n                Debug.Log(\"stringPasswd:\" + stringPasswd);\r\n\r\n                if (stringAccount.Length > 0 && stringPasswd.Length > 5)\r\n                {\r\n                    createAccount();\r\n                }\r\n                else\r\n                {\r\n                    err(\"account or password is error, length < 6!(�˺Ż���������󣬳��ȱ������5!)\");\r\n                }\r\n            }\r\n\r\n            stringAccount = GUI.TextField(new Rect(Screen.width / 2 - 100, Screen.height / 2 - 50, 200, 30), stringAccount, 20);\r\n            stringPasswd = GUI.PasswordField(new Rect(Screen.width / 2 - 100, Screen.height / 2 - 10, 200, 30), stringPasswd, '*');\r\n        }\r\n\r\n        void onWorldUI()\r\n        {\r\n            labelMsg = \"\";\r\n\r\n            if (showReliveGUI)\r\n            {\r\n                if (GUI.Button(new Rect(Screen.width / 2 - 100, Screen.height / 2, 200, 30), \"Relive(����)\"))\r\n                {\r\n                    KBEngine.Event.fireIn(\"relive\", (Byte)1);\r\n                }\r\n            }\r\n\r\n            if (level == 1)\r\n                GUI.Label(new Rect(0, 75, 400, 100), \"Mass: \" + mass + \"mg\");\r\n            else if (level == 2)\r\n                GUI.Label(new Rect(0, 75, 400, 100), \"Mass: \" + mass + \"g\");\r\n            else if (level == 3)\r\n                GUI.Label(new Rect(0, 75, 400, 100), \"Mass: \" + mass + \"kg\");\r\n            else if (level == 4)\r\n                GUI.Label(new Rect(0, 75, 400, 100), \"Mass: \" + mass + \"t\");\r\n            else if (level >= 5)\r\n                GUI.Label(new Rect(0, 75, 400, 100), \"Mass: \" + mass + \"kt\");\r\n        }\r\n\r\n        void OnGUI()\r\n        {\r\n            if (ui_state == 1)\r\n            {\r\n                onWorldUI();\r\n            }\r\n            else\r\n            {\r\n                onLoginUI();\r\n            }\r\n\r\n            if (KBEngineApp.app != null && KBEngineApp.app.serverVersion != \"\"\r\n                && KBEngineApp.app.serverVersion != KBEngineApp.app.clientVersion)\r\n            {\r\n                labelColor = Color.red;\r\n                labelMsg = \"version not match(curr=\" + KBEngineApp.app.clientVersion + \", srv=\" + KBEngineApp.app.serverVersion + \" )(�汾��ƥ��)\";\r\n            }\r\n            else if (KBEngineApp.app != null && KBEngineApp.app.serverScriptVersion != \"\"\r\n                && KBEngineApp.app.serverScriptVersion != KBEngineApp.app.clientScriptVersion)\r\n            {\r\n                labelColor = Color.red;\r\n                labelMsg = \"scriptVersion not match(curr=\" + KBEngineApp.app.clientScriptVersion + \", srv=\" + KBEngineApp.app.serverScriptVersion + \" )(�ű��汾��ƥ��)\";\r\n            }\r\n\r\n            GUI.contentColor = labelColor;\r\n            GUI.Label(new Rect((Screen.width / 2) - 100, 40, 400, 100), labelMsg);\r\n\r\n            GUI.Label(new Rect(0, 5, 400, 100), \"client version: \" + KBEngine.KBEngineApp.app.clientVersion);\r\n            GUI.Label(new Rect(0, 20, 400, 100), \"client script version: \" + KBEngine.KBEngineApp.app.clientScriptVersion);\r\n            GUI.Label(new Rect(0, 35, 400, 100), \"server version: \" + KBEngine.KBEngineApp.app.serverVersion);\r\n            GUI.Label(new Rect(0, 50, 400, 100), \"server script version: \" + KBEngine.KBEngineApp.app.serverScriptVersion);\r\n        }\r\n\r\n        public void err(string s)\r\n        {\r\n            labelColor = Color.red;\r\n            labelMsg = s;\r\n        }\r\n\r\n        public void info(string s)\r\n        {\r\n            labelColor = Color.green;\r\n            labelMsg = s;\r\n        }\r\n\r\n        public void login()\r\n        {\r\n            //SceneManager.LoadScene(\"world\");\r\n            info(\"connect to server...(���ӵ������...)\");\r\n            KBEngine.Event.fireIn(\"login\", stringAccount, stringPasswd, System.Text.Encoding.UTF8.GetBytes(\"kbengine_unity3d_balls\"));\r\n        }\r\n\r\n        public void createAccount()\r\n        {\r\n            info(\"connect to server...(���ӵ������...)\");\r\n\r\n            KBEngine.Event.fireIn(\"createAccount\", stringAccount, stringPasswd, System.Text.Encoding.UTF8.GetBytes(\"kbengine_unity3d_balls\"));\r\n        }\r\n\r\n        public void onCreateAccountResult(UInt16 retcode, byte[] datas)\r\n        {\r\n            if (retcode != 0)\r\n            {\r\n                err(\"createAccount is error(ע���˺Ŵ���)! err=\" + KBEngineApp.app.serverErr(retcode));\r\n                return;\r\n            }\r\n\r\n            if (KBEngineApp.validEmail(stringAccount))\r\n            {\r\n                info(\"createAccount is successfully, Please activate your Email!(ע���˺ųɹ����뼤��Email!)\");\r\n            }\r\n            else\r\n            {\r\n                info(\"createAccount is successfully!(ע���˺ųɹ�!)\");\r\n            }\r\n        }\r\n\r\n        public void onConnectionState(bool success)\r\n        {\r\n            if (!success)\r\n                err(\"connect(\" + KBEngineApp.app.getInitArgs().ip + \":\" + KBEngineApp.app.getInitArgs().port + \") is error! (���Ӵ���)\");\r\n            else\r\n                info(\"connect successfully, please wait...(���ӳɹ�����Ⱥ�...)\");\r\n        }\r\n\r\n        public void onLoginFailed(UInt16 failedcode)\r\n        {\r\n            if (failedcode == 20)\r\n            {\r\n                err(\"login is failed(��½ʧ��), err=\" + KBEngineApp.app.serverErr(failedcode) + \", \" + System.Text.Encoding.ASCII.GetString(KBEngineApp.app.serverdatas()));\r\n            }\r\n            else\r\n            {\r\n                err(\"login is failed(��½ʧ��), err=\" + KBEngineApp.app.serverErr(failedcode));\r\n            }\r\n        }\r\n\r\n        public void onVersionNotMatch(string verInfo, string serVerInfo)\r\n        {\r\n            err(\"\");\r\n        }\r\n\r\n        public void onScriptVersionNotMatch(string verInfo, string serVerInfo)\r\n        {\r\n            err(\"\");\r\n        }\r\n\r\n        public void onLoginBaseappFailed(UInt16 failedcode)\r\n        {\r\n            err(\"loginBaseapp is failed(��½����ʧ��), err=\" + KBEngineApp.app.serverErr(failedcode));\r\n        }\r\n\r\n        public void onLoginBaseapp()\r\n        {\r\n            info(\"connect to loginBaseapp, please wait...(���ӵ����أ� ���Ժ�...)\");\r\n        }\r\n\r\n        public void OnLoginSuccessfully(OnLoginSuccessfullyEvent evt)\r\n        {\r\n            Debug.Log(\"login is successfully!\");\r\n            info(\"login is successfully!(��½�ɹ�!)\");\r\n            ui_state = 1;\r\n            //this.Publish(new UnloadSceneCommand() { SceneName = \"LoginScene\" });\r\n            this.Publish(new LoadSceneCommand() { SceneName = \"WorldScene\" });\r\n        }\r\n\r\n        public void onKicked(UInt16 failedcode)\r\n        {\r\n            err(\"kick, disconnect!, reason=\" + KBEngineApp.app.serverErr(failedcode));\r\n            SceneManager.LoadScene(\"login\");\r\n            ui_state = 0;\r\n        }\r\n\r\n        public void Loginapp_importClientMessages()\r\n        {\r\n            info(\"Loginapp_importClientMessages ...\");\r\n        }\r\n\r\n        public void Baseapp_importClientMessages()\r\n        {\r\n            info(\"Baseapp_importClientMessages ...\");\r\n        }\r\n\r\n        public void Baseapp_importClientEntityDef()\r\n        {\r\n            info(\"importClientEntityDef ...\");\r\n        }\r\n\r\n        public void onDisconnected()\r\n        {\r\n            SceneManager.LoadScene(\"login\");\r\n            ui_state = 0;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Services/WorldViewService.cs"			, 
			"Code":"using uFrame.MVVM.Events;\r\nusing uFrame.MVVM.ViewModels;\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    using KBEngine;\r\n    \r\n    \r\n    public class WorldViewService : WorldViewServiceBase {\r\n        private UnityEngine.GameObject terrain = null;\r\n        public UnityEngine.GameObject terrainPerfab;\r\n\r\n        private UnityEngine.GameObject player = null;\r\n        public UnityEngine.GameObject foodsPerfab;\r\n        public UnityEngine.GameObject smashsPerfab;\r\n        public UnityEngine.GameObject avatarPerfab;\r\n\r\n        public Sprite[] avatarSprites = new Sprite[2];\r\n        public Sprite[] foodsSprites = new Sprite[3];\r\n        public Sprite[] smashsSprites = new Sprite[1];\r\n\r\n        public static float GAME_MAP_SIZE = 0.0f;\r\n        public static int ROOM_MAX_PLAYER = 0;\r\n        public static int GAME_ROUND_TIME = 0;\r\n\r\n        /// <summary>\r\n        /// This method is invoked whenever the kernel is loading\r\n        /// Since the kernel lives throughout the entire lifecycle  of the game, this will only be invoked once.\r\n        /// </summary>\r\n        public override void Setup() {\r\n            base.Setup();\r\n            // Use the line below to subscribe to events\r\n            // this.OnEvent<MyEvent>().Subscribe(myEventInstance => { TODO });\r\n\r\n            this.OnEvent<OnAvatarEnterWorldEvent>().ObserveOnMainThread().Subscribe(OnAvatarEnterWorld);\r\n\r\n            this.OnEvent<onEnterWorldEvent>().ObserveOnMainThread().Subscribe(OnEnterWorld);\r\n            this.OnEvent<onLeaveWorldEvent>().ObserveOnMainThread().Subscribe(OnLeaveWorld);\r\n            this.OnEvent<setpositionEvent>().ObserveOnMainThread().Subscribe(SetPosition);\r\n            this.OnEvent<setdirectionEvent>().ObserveOnMainThread().Subscribe(SetDirection);\r\n            this.OnEvent<onControlledEvent>().ObserveOnMainThread().Subscribe(OnControlled);\r\n            this.OnEvent<addSpaceGeometryMappingEvent>().ObserveOnMainThread().Subscribe(AddSpaceGeometryMapping);\r\n            this.OnEvent<updatePositionEvent>().ObserveOnMainThread().Subscribe(UpdatePosition);\r\n            this.OnEvent<onSetSpaceDataEvent>().ObserveOnMainThread().Subscribe(OnSetSpaceData);\r\n            this.OnEvent<onDelSpaceDataEvent>().ObserveOnMainThread().Subscribe(OnDelSpaceData);\r\n        }\r\n\r\n        private void CreatePlayer()\r\n        {\r\n            if (player != null)\r\n            {\r\n                player.GetComponent<EntityCommonView>().entityEnable();\r\n                return;\r\n            }\r\n\r\n            if (KBEngineApp.app.entity_type != \"Avatar\")\r\n            {\r\n                return;\r\n            }\r\n\r\n            KBEngine.Entity avatar = (KBEngine.Entity)KBEngineApp.app.player();\r\n            if (avatar == null)\r\n            {\r\n                Debug.Log(\"wait create(palyer)!\");\r\n                return;\r\n            }\r\n\r\n            // ���Ĭ���ڵ�0�㣬ԽС��Ӧ��Խ����һ�㣬 ��ĸ���С��\r\n            var layer = 0.0f;\r\n\r\n            var cmd = new InstantiateViewCommand()\r\n            {\r\n                ViewModelObject = avatar as ViewModel,\r\n                Prefab = avatarPerfab\r\n            };\r\n            this.Publish(cmd);\r\n            player = cmd.Result.gameObject;\r\n\r\n            var entity = player.GetComponent<EntityCommonView>();\r\n            entity.entityDisable();\r\n            avatar.renderObj = player;\r\n            entity.isAvatar = true;\r\n            entity.isPlayer = true;\r\n\r\n            // �б�Ҫ����һ�£����ڸýӿ���Update�첽���ã��п���set_position�ȳ�ʼ����Ϣ�Ѿ��ȴ�����\r\n            // ��ô���������renderObj��λ�úͷ���Ϊ0\r\n            SetPosition(new setpositionEvent() { Entity = avatar });\r\n            SetDirection(new setdirectionEvent() { Entity = avatar });\r\n\r\n            Camera.main.transform.position = new Vector3(player.transform.position.x, player.transform.position.y, -10.0f);\r\n            Camera.main.transform.parent = player.transform;\r\n        }\r\n\r\n        private void OnAvatarEnterWorld(OnAvatarEnterWorldEvent evt)\r\n        {\r\n            var avatar = evt.Entity;\r\n            if (!avatar.isPlayer())\r\n                return;\r\n            CreatePlayer();\r\n        }\r\n\r\n        private void OnEnterWorld(onEnterWorldEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n            if (entity.isPlayer())\r\n            {\r\n                CreatePlayer();\r\n            }\r\n            else\r\n            {\r\n                UnityEngine.GameObject entityPerfab = null;\r\n\r\n                float layer = 0.0f;\r\n                if (entity.className == \"FoodViewModel\")\r\n                {\r\n                    entityPerfab = foodsPerfab;\r\n                    layer = 100.0f;\r\n                }\r\n                else if (entity.className == \"SmashViewModel\")\r\n                {\r\n                    layer = -9.0f;\r\n\r\n                    // ������Զ��Ӧ��������avatar����ʳ������һ��\r\n                    entityPerfab = smashsPerfab;\r\n                }\r\n                else\r\n                {\r\n                    entityPerfab = avatarPerfab;\r\n                }\r\n\r\n                var cmd = new InstantiateViewCommand()\r\n                {\r\n                    ViewModelObject = entity as ViewModel,\r\n                    Prefab = entityPerfab\r\n                };\r\n                this.Publish(cmd);\r\n                entity.renderObj = cmd.Result.gameObject;\r\n\r\n                ((UnityEngine.GameObject)entity.renderObj).name = entity.className + \"_\" + entity.id;\r\n                SetPosition(new setpositionEvent() { Entity = entity });\r\n                SetDirection(new setdirectionEvent() { Entity = entity });\r\n\r\n                if (entity.className == \"AvatarViewModel\")\r\n                {\r\n                    ((UnityEngine.GameObject)entity.renderObj).GetComponent<EntityCommonView>().isAvatar = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        private void OnLeaveWorld(onLeaveWorldEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n            if (entity.renderObj == null)\r\n                return;\r\n\r\n            UnityEngine.GameObject.Destroy((UnityEngine.GameObject)entity.renderObj);\r\n            entity.renderObj = null;\r\n        }\r\n\r\n        private void OnControlled(onControlledEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n            var isControlled = evt.isControlled;\r\n\r\n            if (entity.renderObj == null)\r\n                return;\r\n\r\n            EntityCommonView EntityCommonView = ((UnityEngine.GameObject)entity.renderObj).GetComponent<EntityCommonView>();\r\n            EntityCommonView.isControlled = isControlled;\r\n        }\r\n\r\n        private void SetPosition(setpositionEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n            if (entity.renderObj == null)\r\n                return;\r\n\r\n            GameObject go = ((UnityEngine.GameObject)entity.renderObj);\r\n            Vector3 currpos = new Vector3(entity.position.x, entity.position.z, go.transform.position.z);\r\n            go.GetComponent<EntityCommonView>().destPosition = currpos;\r\n            go.GetComponent<EntityCommonView>().position = currpos;\r\n        }\r\n\r\n        private void SetDirection(setdirectionEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n            if (entity.renderObj == null)\r\n                return;\r\n\r\n            ((UnityEngine.GameObject)entity.renderObj).GetComponent<EntityCommonView>().destDirection =\r\n                new Vector3(entity.direction.y, entity.direction.z, entity.direction.x);\r\n        }\r\n\r\n        private void AddSpaceGeometryMapping(addSpaceGeometryMappingEvent evt)\r\n        {\r\n            var respath = evt.Respath;\r\n\r\n            if (player)\r\n                player.GetComponent<EntityCommonView>().entityEnable();\r\n        }\r\n\r\n        private void OnSetSpaceData(onSetSpaceDataEvent evt)\r\n        {\r\n            if (\"GAME_MAP_SIZE\" == evt.Key)\r\n                GAME_MAP_SIZE = float.Parse(evt.Value);\r\n            else if (\"ROOM_MAX_PLAYER\" == evt.Key)\r\n                ROOM_MAX_PLAYER = int.Parse(evt.Value);\r\n            else if (\"GAME_MAP_SIZE\" == evt.Key)\r\n                GAME_ROUND_TIME = int.Parse(evt.Value);\r\n        }\r\n\r\n        private void OnDelSpaceData(onDelSpaceDataEvent evt)\r\n        {\r\n\r\n        }\r\n\r\n        private void UpdatePosition(updatePositionEvent evt)\r\n        {\r\n            var entity = evt.Entity;\r\n\r\n            if (entity.renderObj == null)\r\n                return;\r\n\r\n            EntityCommonView EntityCommonView = ((UnityEngine.GameObject)entity.renderObj).GetComponent<EntityCommonView>();\r\n            GameObject go = ((UnityEngine.GameObject)entity.renderObj);\r\n            EntityCommonView.destPosition = new Vector3(entity.position.x, entity.position.z, go.transform.position.z);\r\n        }\r\n\r\n        protected override void OnDestroy()\r\n        {\r\n            base.OnDestroy();\r\n            KBEngine.Event.deregisterOut(this);\r\n        }\r\n\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public partial class onDelSpaceDataEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private String _Key;\r\n        \r\n        private UInt32 _SpaceID;\r\n        \r\n        public String Key {\r\n            get {\r\n                return _Key;\r\n            }\r\n            set {\r\n                _Key = value;\r\n            }\r\n        }\r\n        \r\n        public UInt32 SpaceID {\r\n            get {\r\n                return _SpaceID;\r\n            }\r\n            set {\r\n                _SpaceID = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            jsonObject.Add(\"Key\", new JSONData(this.Key));\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n            var node = JSON.Parse(json);\r\n            if (node[\"Key\"] != null) {\r\n                this.Key = node[\"Key\"].AsString;\r\n            }\r\n        }\r\n    }\r\n    \r\n    public partial class onLeaveSpaceEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class setpositionEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class OnLoginSuccessfullyEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class onEnterWorldEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class setdirectionEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class onEnterSpaceEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class onSetSpaceDataEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private UInt32 _SpaceID;\r\n        \r\n        private String _Value;\r\n        \r\n        private String _Key;\r\n        \r\n        public UInt32 SpaceID {\r\n            get {\r\n                return _SpaceID;\r\n            }\r\n            set {\r\n                _SpaceID = value;\r\n            }\r\n        }\r\n        \r\n        public String Value {\r\n            get {\r\n                return _Value;\r\n            }\r\n            set {\r\n                _Value = value;\r\n            }\r\n        }\r\n        \r\n        public String Key {\r\n            get {\r\n                return _Key;\r\n            }\r\n            set {\r\n                _Key = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            jsonObject.Add(\"Value\", new JSONData(this.Value));\r\n            jsonObject.Add(\"Key\", new JSONData(this.Key));\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n            var node = JSON.Parse(json);\r\n            if (node[\"Value\"] != null) {\r\n                this.Value = node[\"Value\"].AsString;\r\n            }\r\n            if (node[\"Key\"] != null) {\r\n                this.Key = node[\"Key\"].AsString;\r\n            }\r\n        }\r\n    }\r\n    \r\n    public partial class onLeaveWorldEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class onControlledEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        private Boolean _isControlled;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public Boolean isControlled {\r\n            get {\r\n                return _isControlled;\r\n            }\r\n            set {\r\n                _isControlled = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            jsonObject.Add(\"isControlled\", new JSONData(this.isControlled));\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n            var node = JSON.Parse(json);\r\n            if (node[\"isControlled\"] != null) {\r\n                this.isControlled = node[\"isControlled\"].AsBool;\r\n            }\r\n        }\r\n    }\r\n    \r\n    public partial class updatePositionEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class OnAvatarEnterWorldEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private KBEngine.Entity _Entity;\r\n        \r\n        public KBEngine.Entity Entity {\r\n            get {\r\n                return _Entity;\r\n            }\r\n            set {\r\n                _Entity = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n        }\r\n    }\r\n    \r\n    public partial class addSpaceGeometryMappingEventBase : uFrame.MVVM.IJSonSerializable {\r\n        \r\n        private String _Respath;\r\n        \r\n        public String Respath {\r\n            get {\r\n                return _Respath;\r\n            }\r\n            set {\r\n                _Respath = value;\r\n            }\r\n        }\r\n        \r\n        public virtual string Serialize() {\r\n            var jsonObject = new JSONClass();\r\n            jsonObject.Add(\"Respath\", new JSONData(this.Respath));\r\n            return jsonObject.ToString();\r\n        }\r\n        \r\n        public virtual void Deserialize(string json) {\r\n            var node = JSON.Parse(json);\r\n            if (node[\"Respath\"] != null) {\r\n                this.Respath = node[\"Respath\"].AsString;\r\n            }\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onDelSpaceDataEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onDelSpaceDataEvent : onDelSpaceDataEventBase {\r\n        public onDelSpaceDataEvent(UInt32 spaceId, string key)\r\n        {\r\n            SpaceID = spaceId;\r\n            Key = key;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onLeaveSpaceEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onLeaveSpaceEvent : onLeaveSpaceEventBase {\r\n        public onLeaveSpaceEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/setpositionEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class setpositionEvent : setpositionEventBase {\r\n        public setpositionEvent()\r\n        {\r\n\r\n        }\r\n\r\n        public setpositionEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/OnLoginSuccessfullyEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class OnLoginSuccessfullyEvent : OnLoginSuccessfullyEventBase {\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onEnterWorldEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onEnterWorldEvent : onEnterWorldEventBase {\r\n        public onEnterWorldEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/setdirectionEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class setdirectionEvent : setdirectionEventBase {\r\n        public setdirectionEvent()\r\n        {\r\n            \r\n        }\r\n\r\n        public setdirectionEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onEnterSpaceEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onEnterSpaceEvent : onEnterSpaceEventBase {\r\n        public onEnterSpaceEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onSetSpaceDataEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onSetSpaceDataEvent : onSetSpaceDataEventBase {\r\n        public onSetSpaceDataEvent(UInt32 spaceId, string key, string value)\r\n        {\r\n            SpaceID = spaceId;\r\n            Key = key;\r\n            Value = value;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onLeaveWorldEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onLeaveWorldEvent : onLeaveWorldEventBase {\r\n        public onLeaveWorldEvent(KBEngine.Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/onControlledEvent.cs"			, 
			"Code":"using KBEngine;\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class onControlledEvent : onControlledEventBase {\r\n        public onControlledEvent(Entity entity, bool isControlled)\r\n        {\r\n            Entity = entity;\r\n            this.isControlled = isControlled;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/updatePositionEvent.cs"			, 
			"Code":"using KBEngine;\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class updatePositionEvent : updatePositionEventBase {\r\n        public updatePositionEvent(Entity entity)\r\n        {\r\n            Entity = entity;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/OnAvatarEnterWorldEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class OnAvatarEnterWorldEvent : OnAvatarEnterWorldEventBase {\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SimpleClasses/addSpaceGeometryMappingEvent.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Json;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    \r\n    \r\n    public class addSpaceGeometryMappingEvent : addSpaceGeometryMappingEventBase {\r\n        public addSpaceGeometryMappingEvent(string resPath)\r\n        {\r\n            this.Respath = resPath;\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SystemLoaders.designer/WorldSystemLoader.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class WorldSystemLoaderBase : uFrame.Kernel.SystemLoader {\r\n        \r\n        private EntityCommonController _EntityCommonController;\r\n        \r\n        private AvatarController _AvatarController;\r\n        \r\n        private SmashController _SmashController;\r\n        \r\n        private FoodController _FoodController;\r\n        \r\n        [uFrame.IOC.InjectAttribute()]\r\n        public virtual EntityCommonController EntityCommonController {\r\n            get {\r\n                if (_EntityCommonController==null) {\r\n                    _EntityCommonController = Container.CreateInstance(typeof(EntityCommonController)) as EntityCommonController;;\r\n                }\r\n                return _EntityCommonController;\r\n            }\r\n            set {\r\n                _EntityCommonController = value;\r\n            }\r\n        }\r\n        \r\n        [uFrame.IOC.InjectAttribute()]\r\n        public virtual AvatarController AvatarController {\r\n            get {\r\n                if (_AvatarController==null) {\r\n                    _AvatarController = Container.CreateInstance(typeof(AvatarController)) as AvatarController;;\r\n                }\r\n                return _AvatarController;\r\n            }\r\n            set {\r\n                _AvatarController = value;\r\n            }\r\n        }\r\n        \r\n        [uFrame.IOC.InjectAttribute()]\r\n        public virtual SmashController SmashController {\r\n            get {\r\n                if (_SmashController==null) {\r\n                    _SmashController = Container.CreateInstance(typeof(SmashController)) as SmashController;;\r\n                }\r\n                return _SmashController;\r\n            }\r\n            set {\r\n                _SmashController = value;\r\n            }\r\n        }\r\n        \r\n        [uFrame.IOC.InjectAttribute()]\r\n        public virtual FoodController FoodController {\r\n            get {\r\n                if (_FoodController==null) {\r\n                    _FoodController = Container.CreateInstance(typeof(FoodController)) as FoodController;;\r\n                }\r\n                return _FoodController;\r\n            }\r\n            set {\r\n                _FoodController = value;\r\n            }\r\n        }\r\n        \r\n        public override void Load() {\r\n            Container.RegisterViewModelManager<EntityCommonViewModel>(new ViewModelManager<EntityCommonViewModel>());\r\n            Container.RegisterController<EntityCommonController>(EntityCommonController);\r\n            Container.RegisterViewModelManager<AvatarViewModel>(new ViewModelManager<AvatarViewModel>());\r\n            Container.RegisterController<AvatarController>(AvatarController);\r\n            Container.RegisterViewModelManager<SmashViewModel>(new ViewModelManager<SmashViewModel>());\r\n            Container.RegisterController<SmashController>(SmashController);\r\n            Container.RegisterViewModelManager<FoodViewModel>(new ViewModelManager<FoodViewModel>());\r\n            Container.RegisterController<FoodController>(FoodController);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/SystemLoaders/WorldSystemLoader.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.IOC;\r\n    using uFrame.Kernel;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class WorldSystemLoader : WorldSystemLoaderBase {\r\n        \r\n        public override void Load() {\r\n            base.Load();\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views.designer/SmashView.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class SmashViewBase : EntityCommonView {\r\n        \r\n        public override string DefaultIdentifier {\r\n            get {\r\n                return base.DefaultIdentifier;\r\n            }\r\n        }\r\n        \r\n        public override System.Type ViewModelType {\r\n            get {\r\n                return typeof(SmashViewModel);\r\n            }\r\n        }\r\n        \r\n        public SmashViewModel Smash {\r\n            get {\r\n                return (SmashViewModel)ViewModelObject;\r\n            }\r\n        }\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as SmashViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Smash to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views/SmashView.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class SmashView : SmashViewBase {\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as SmashViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Smash to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views.designer/AvatarObjectView.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using KbeBalls;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class AvatarObjectViewBase : EntityCommonView {\r\n        \r\n        [UnityEngine.SerializeField()]\r\n        [uFrame.MVVM.Attributes.UFGroup(\"View Model Properties\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public String _name;\r\n        \r\n        [UnityEngine.SerializeField()]\r\n        [uFrame.MVVM.Attributes.UFGroup(\"View Model Properties\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public Double _moveSpeed;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"moveSpeed\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _BindmoveSpeed = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"moveSpeed\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_moveSpeedonlyWhenChanged\")]\r\n        protected bool _moveSpeedOnlyWhenChanged;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"name\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _Bindname = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"name\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_nameonlyWhenChanged\")]\r\n        protected bool _nameOnlyWhenChanged;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"ReSpawn\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _BindReSpawn = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"ReSpawn\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_ReSpawnbutton\")]\r\n        protected UnityEngine.UI.Button _ReSpawnButton;\r\n        \r\n        public override string DefaultIdentifier {\r\n            get {\r\n                return base.DefaultIdentifier;\r\n            }\r\n        }\r\n        \r\n        public override System.Type ViewModelType {\r\n            get {\r\n                return typeof(AvatarViewModel);\r\n            }\r\n        }\r\n        \r\n        public AvatarViewModel Avatar {\r\n            get {\r\n                return (AvatarViewModel)ViewModelObject;\r\n            }\r\n        }\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as AvatarViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n            var avatarobjectview = ((AvatarViewModel)model);\r\n            avatarobjectview.name = this._name;\r\n            avatarobjectview.moveSpeed = this._moveSpeed;\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Avatar to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n            if (_BindmoveSpeed) {\r\n                this.BindProperty(this.Avatar.moveSpeedProperty, this.moveSpeedChanged, _moveSpeedOnlyWhenChanged);\r\n            }\r\n            if (_Bindname) {\r\n                this.BindProperty(this.Avatar.nameProperty, this.nameChanged, _nameOnlyWhenChanged);\r\n            }\r\n            if (_BindReSpawn) {\r\n                this.BindCommandExecuted(this.Avatar.ReSpawn, this.ReSpawnExecuted);\r\n            }\r\n            if (_BindReSpawn) {\r\n                this.BindButtonToCommand(_ReSpawnButton, this.Avatar.ReSpawn);\r\n            }\r\n        }\r\n        \r\n        public virtual void moveSpeedChanged(Double arg1) {\r\n        }\r\n        \r\n        public virtual void nameChanged(String arg1) {\r\n        }\r\n        \r\n        public virtual void ReSpawnExecuted(ReSpawnCommand command) {\r\n        }\r\n        \r\n        public virtual void ExecuteReSpawn(ReSpawnCommand command) {\r\n            command.Sender = Avatar;\r\n            Avatar.ReSpawn.OnNext(command);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views/AvatarObjectView.cs"			, 
			"Code":"using uFrame.IOC;\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class AvatarObjectView : AvatarObjectViewBase\r\n    {\r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as AvatarViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Avatar to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n\r\n        public override void modelIDChanged(int arg1)\r\n        {\r\n            Debug.Log(\"modelIDChanged\");\r\n        }\r\n\r\n        public override void nameChanged(String arg1)\r\n        {\r\n            Debug.Log(\"nameChanged\");\r\n            gameObject.name = arg1;\r\n        }\r\n\r\n        public override void moveSpeedChanged(double arg1)\r\n        {\r\n            Debug.Log(\"moveSpeedChanged\");\r\n            this._moveSpeed = (float)arg1;\r\n            this.speed = (float)arg1;\r\n        }\r\n\r\n        public override void ExecuteReSpawn(ReSpawnCommand command)\r\n        {\r\n            Debug.Log(\"ExecuteReSpawn\");\r\n            base.ExecuteReSpawn(command);\r\n        }\r\n\r\n        public override void ReSpawnExecuted(ReSpawnCommand command)\r\n        {\r\n            Debug.Log(\"ReSpawnExecuted\");\r\n            base.ReSpawnExecuted(command);\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views.designer/FoodView.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class FoodViewBase : EntityCommonView {\r\n        \r\n        public override string DefaultIdentifier {\r\n            get {\r\n                return base.DefaultIdentifier;\r\n            }\r\n        }\r\n        \r\n        public override System.Type ViewModelType {\r\n            get {\r\n                return typeof(FoodViewModel);\r\n            }\r\n        }\r\n        \r\n        public FoodViewModel Food {\r\n            get {\r\n                return (FoodViewModel)ViewModelObject;\r\n            }\r\n        }\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as FoodViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Food to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views/FoodView.cs"			, 
			"Code":"namespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class FoodView : FoodViewBase {\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as FoodViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.Food to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views.designer/EntityCommonView.designer.cs"			, 
			"Code":"// ------------------------------------------------------------------------------\r\n//  <autogenerated>\r\n//      This code was generated by a tool.\r\n//      Mono Runtime Version: 4.0.30319.42000\r\n// \r\n//      Changes to this file may cause incorrect behavior and will be lost if \r\n//      the code is regenerated.\r\n//  </autogenerated>\r\n// ------------------------------------------------------------------------------\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    \r\n    \r\n    public class EntityCommonViewBase : uFrame.MVVM.Views.ViewBase {\r\n        \r\n        [UnityEngine.SerializeField()]\r\n        [uFrame.MVVM.Attributes.UFGroup(\"View Model Properties\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public Vector3 _Position;\r\n        \r\n        [UnityEngine.SerializeField()]\r\n        [uFrame.MVVM.Attributes.UFGroup(\"View Model Properties\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public Vector3 _Direction;\r\n        \r\n        [UnityEngine.SerializeField()]\r\n        [uFrame.MVVM.Attributes.UFGroup(\"View Model Properties\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public Int32 _modelID;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"Position\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _BindPosition = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"Position\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_PositiononlyWhenChanged\")]\r\n        protected bool _PositionOnlyWhenChanged;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"Direction\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _BindDirection = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"Direction\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_DirectiononlyWhenChanged\")]\r\n        protected bool _DirectionOnlyWhenChanged;\r\n        \r\n        [uFrame.MVVM.Attributes.UFToggleGroup(\"modelID\")]\r\n        [UnityEngine.HideInInspector()]\r\n        public bool _BindmodelID = true;\r\n        \r\n        [uFrame.MVVM.Attributes.UFGroup(\"modelID\")]\r\n        [UnityEngine.SerializeField()]\r\n        [UnityEngine.HideInInspector()]\r\n        [UnityEngine.Serialization.FormerlySerializedAsAttribute(\"_modelIDonlyWhenChanged\")]\r\n        protected bool _modelIDOnlyWhenChanged;\r\n        \r\n        public override string DefaultIdentifier {\r\n            get {\r\n                return base.DefaultIdentifier;\r\n            }\r\n        }\r\n        \r\n        public override System.Type ViewModelType {\r\n            get {\r\n                return typeof(EntityCommonViewModel);\r\n            }\r\n        }\r\n        \r\n        public EntityCommonViewModel EntityCommon {\r\n            get {\r\n                return (EntityCommonViewModel)ViewModelObject;\r\n            }\r\n        }\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as EntityCommonViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n            var entitycommonview = ((EntityCommonViewModel)model);\r\n            entitycommonview.Position = this._Position;\r\n            entitycommonview.Direction = this._Direction;\r\n            entitycommonview.modelID = this._modelID;\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.EntityCommon to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n            if (_BindPosition) {\r\n                this.BindProperty(this.EntityCommon.PositionProperty, this.PositionChanged, _PositionOnlyWhenChanged);\r\n            }\r\n            if (_BindDirection) {\r\n                this.BindProperty(this.EntityCommon.DirectionProperty, this.DirectionChanged, _DirectionOnlyWhenChanged);\r\n            }\r\n            if (_BindmodelID) {\r\n                this.BindProperty(this.EntityCommon.modelIDProperty, this.modelIDChanged, _modelIDOnlyWhenChanged);\r\n            }\r\n        }\r\n        \r\n        public virtual void PositionChanged(Vector3 arg1) {\r\n        }\r\n        \r\n        public virtual void DirectionChanged(Vector3 arg1) {\r\n        }\r\n        \r\n        public virtual void modelIDChanged(Int32 arg1) {\r\n        }\r\n    }\r\n}\r\n"		}
, 		{
			"RelativePath":"/WorldSystem/Views/EntityCommonView.cs"			, 
			"Code":"using uFrame.IOC;\r\n\r\nnamespace KbeBalls {\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using uFrame.Kernel;\r\n    using uFrame.Kernel.Serialization;\r\n    using uFrame.MVVM;\r\n    using uFrame.MVVM.Bindings;\r\n    using uFrame.MVVM.Services;\r\n    using uFrame.MVVM.ViewModels;\r\n    using UniRx;\r\n    using UnityEngine;\r\n    using KBEngine;\r\n    \r\n    \r\n    public class EntityCommonView : EntityCommonViewBase\r\n    {\r\n        public override void modelIDChanged(Int32 arg1) {\r\n            var worldViewService = uFrameKernel.Instance.GetComponentInChildren<WorldViewService>();\r\n            Sprite sp = null;\r\n\r\n            if (this.transform.gameObject.name.ToLower().Contains(\"avatar\"))\r\n            {\r\n                sp = worldViewService.avatarSprites[arg1];\r\n            }\r\n            else if (this.transform.gameObject.name.ToLower().Contains(\"food\"))\r\n            {\r\n                sp = worldViewService.foodsSprites[arg1];\r\n            }\r\n            else if (this.transform.gameObject.name.ToLower().Contains(\"smash\"))\r\n            {\r\n                sp = worldViewService.smashsSprites[arg1];\r\n            }\r\n\r\n            GetComponent<SpriteRenderer>().sprite = sp;\r\n        }\r\n        \r\n        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {\r\n            base.InitializeViewModel(model);\r\n            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.\r\n            // var vm = model as EntityCommonViewModel;\r\n            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.\r\n        }\r\n        \r\n        public override void Bind() {\r\n            base.Bind();\r\n            // Use this.EntityCommon to access the viewmodel.\r\n            // Use this method to subscribe to the view-model.\r\n            // Any designer bindings are created in the base implementation.\r\n        }\r\n\r\n        private bool isMouseDown = false;\r\n\r\n        public bool isPlayer = false;\r\n        public bool isAvatar = false;\r\n\r\n        private Vector3 _position = Vector3.zero;\r\n        private Vector3 _eulerAngles = Vector3.zero;\r\n\r\n        public Vector3 destPosition = Vector3.zero;\r\n        public Vector3 destDirection = Vector3.zero;\r\n\r\n        private float _speed = 0f;\r\n\r\n        public bool isControlled = false;\r\n\r\n        public bool entityEnabled = true;\r\n\r\n        private Vector3 lastMoveDir = Vector3.zero;\r\n\r\n        private static GameObject directionObj = null;\r\n        private static GameObject directionObj_sprite = null;\r\n\r\n        public Vector3 position\r\n        {\r\n            get\r\n            {\r\n                return _position;\r\n            }\r\n\r\n            set\r\n            {\r\n                _position = value;\r\n\r\n                if (gameObject != null)\r\n                    gameObject.transform.position = _position;\r\n            }\r\n        }\r\n\r\n        public Vector3 eulerAngles\r\n        {\r\n            get\r\n            {\r\n                return _eulerAngles;\r\n            }\r\n\r\n            set\r\n            {\r\n                _eulerAngles = value;\r\n\r\n                if (directionObj != null)\r\n                {\r\n                    directionObj.transform.eulerAngles = _eulerAngles;\r\n                }\r\n            }\r\n        }\r\n\r\n        public Quaternion rotation\r\n        {\r\n            get\r\n            {\r\n                return Quaternion.Euler(_eulerAngles);\r\n            }\r\n\r\n            set\r\n            {\r\n                eulerAngles = value.eulerAngles;\r\n            }\r\n        }\r\n\r\n        public float speed\r\n        {\r\n            get\r\n            {\r\n                return _speed;\r\n            }\r\n\r\n            set\r\n            {\r\n                _speed = value;\r\n            }\r\n        }\r\n\r\n        public void entityEnable()\r\n        {\r\n            entityEnabled = true;\r\n        }\r\n\r\n        public void entityDisable()\r\n        {\r\n            entityEnabled = false;\r\n        }\r\n\r\n        void updatePos(Vector3 targetPos)\r\n        {\r\n            // 球身不允许超出边界\r\n            Vector3 size = GetComponent<SpriteRenderer>().sprite.bounds.size;\r\n            size *= this.transform.localScale.x;\r\n\r\n            float x_half = (size.x / 2);\r\n            float y_half = (size.y / 2);\r\n\r\n            if (targetPos.x < x_half)\r\n                targetPos.x = x_half;\r\n\r\n            if (targetPos.x > WorldViewService.GAME_MAP_SIZE - x_half)\r\n                targetPos.x = WorldViewService.GAME_MAP_SIZE - x_half;\r\n\r\n            if (targetPos.y < y_half)\r\n                targetPos.y = y_half;\r\n\r\n            if (targetPos.y > WorldViewService.GAME_MAP_SIZE - y_half)\r\n                targetPos.y = WorldViewService.GAME_MAP_SIZE - y_half;\r\n\r\n            UpdateDirection(targetPos);\r\n            this.transform.position = targetPos;\r\n        }\r\n\r\n        void FixedUpdate()\r\n        {\r\n            if (!isAvatar)\r\n                return;\r\n\r\n            if (!entityEnabled || KBEngineApp.app == null)\r\n                return;\r\n\r\n            if (isPlayer == isControlled)\r\n                return;\r\n\r\n            KBEngine.Event.fireIn(\"updatePlayer\", gameObject.transform.position.x,\r\n            gameObject.transform.position.z, gameObject.transform.position.y, gameObject.transform.rotation.eulerAngles.y);\r\n        }\r\n\r\n        void UpdateDirection(Vector3 targetPos)\r\n        {\r\n            if (directionObj == null)\r\n            {\r\n                directionObj = GameObject.Find(\"direction\");\r\n                if (directionObj)\r\n                {\r\n                    directionObj.transform.position = transform.position;\r\n                    directionObj.transform.parent = transform;\r\n                    directionObj_sprite = GameObject.Find(\"direction/sprite\");\r\n                }\r\n            }\r\n\r\n            // 更新距离\r\n            if (targetPos == Vector3.zero)\r\n            {\r\n                if (directionObj_sprite)\r\n                {\r\n                    // 球身边界\r\n                    Vector3 size = GetComponent<SpriteRenderer>().sprite.bounds.size;\r\n                    size *= this.transform.localScale.x;\r\n\r\n                    float x_half = (size.x / 2);\r\n\r\n                    directionObj_sprite.transform.localPosition = new Vector3(-(x_half + 1.2f), directionObj_sprite.transform.localPosition.y,\r\n                        directionObj_sprite.transform.localPosition.z);\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            Vector3 dir = targetPos - transform.position;\r\n            dir.z = 0f;\r\n            dir = dir.normalized;\r\n\r\n            float targetAngle = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;\r\n            rotation = Quaternion.Slerp(rotation, Quaternion.Euler(0, 0, targetAngle - 180.0f), 8f * Time.deltaTime);\r\n        }\r\n\r\n        public override void Update()\r\n        {\r\n            //base.Update();\r\n\r\n            if (!isAvatar)\r\n                return;\r\n\r\n            if (!entityEnabled)\r\n            {\r\n                position = destPosition;\r\n                return;\r\n            }\r\n\r\n            float deltaSpeed = (speed * Time.deltaTime);\r\n\r\n            if (isPlayer)\r\n            {\r\n                if (Input.GetMouseButtonDown(0))\r\n                {\r\n                    isMouseDown = true;\r\n                }\r\n                if (Input.GetMouseButtonUp(0))\r\n                {\r\n                    isMouseDown = false;\r\n                }\r\n\r\n                if (isMouseDown)\r\n                {\r\n                    Vector3 movement = Camera.main.ScreenToWorldPoint(Input.mousePosition) - this.transform.position;\r\n                    movement.z = 0.0f;\r\n\r\n                    if (movement.magnitude <= 1.0)\r\n                    {\r\n                        lastMoveDir = Vector3.zero;\r\n                        return;\r\n                    }\r\n\r\n                    movement.Normalize();\r\n                    lastMoveDir = movement;\r\n                    updatePos(this.transform.position + (movement * deltaSpeed));\r\n                }\r\n                else\r\n                {\r\n                    if (lastMoveDir != Vector3.zero)\r\n                        updatePos(this.transform.position + (lastMoveDir * deltaSpeed));\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // 如果是其他玩家移动\r\n                float dist = Vector3.Distance(new Vector3(destPosition.x, destPosition.y, 0f),\r\n                        new Vector3(position.x, position.y, 0f));\r\n\r\n                if (dist > 0.01f)\r\n                {\r\n                    Vector3 pos = position;\r\n\r\n                    Vector3 movement = destPosition - pos;\r\n                    movement.z = 0f;\r\n                    movement.Normalize();\r\n\r\n                    movement *= deltaSpeed;\r\n\r\n                    if (dist > deltaSpeed || movement.magnitude > deltaSpeed)\r\n                        pos += movement;\r\n                    else\r\n                        pos = destPosition;\r\n\r\n                    position = pos;\r\n                }\r\n                else\r\n                {\r\n                    position = destPosition;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"		}
 ]
}
