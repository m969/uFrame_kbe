// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace KbeBalls {
    using KbeBalls;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    
    
    public partial class AvatarViewModelBase : EntityCommonViewModel {
        
        private P<String> _nameProperty;
        
        private P<Double> _moveSpeedProperty;
        
        private Signal<ReSpawnCommand> _ReSpawn;
        
        public AvatarViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<String> nameProperty {
            get {
                return _nameProperty;
            }
            set {
                _nameProperty = value;
            }
        }
        
        public virtual P<Double> moveSpeedProperty {
            get {
                return _moveSpeedProperty;
            }
            set {
                _moveSpeedProperty = value;
            }
        }
        
        public virtual String name {
            get {
                return nameProperty.Value;
            }
            set {
                nameProperty.Value = value;
            }
        }
        
        public virtual Double moveSpeed {
            get {
                return moveSpeedProperty.Value;
            }
            set {
                moveSpeedProperty.Value = value;
            }
        }
        
        public virtual Signal<ReSpawnCommand> ReSpawn {
            get {
                return _ReSpawn;
            }
            set {
                _ReSpawn = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            this.ReSpawn = new Signal<ReSpawnCommand>(this);
            _nameProperty = new P<String>(this, "name");
            _moveSpeedProperty = new P<Double>(this, "moveSpeed");
        }
        
        public virtual void Execute(ReSpawnCommand argument) {
            this.ReSpawn.OnNext(argument);
        }
        
        public virtual void ReSpawn_(String Password) {
            var cmd = new ReSpawnCommand();
            cmd.Password = Password;
            this.ReSpawn.OnNext(cmd);
        }
        
        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Read(stream);
            this.name = stream.DeserializeString("name");;
            this.moveSpeed = stream.DeserializeDouble("moveSpeed");;
        }
        
        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Write(stream);
            stream.SerializeString("name", this.name);
            stream.SerializeDouble("moveSpeed", this.moveSpeed);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {
            base.FillCommands(list);
            list.Add(new ViewModelCommandInfo("ReSpawn", ReSpawn) { ParameterType = typeof(ReSpawnCommand) });
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_nameProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_moveSpeedProperty, false, false, false, false));
        }
    }
    
    public partial class AvatarViewModel {
        
        public AvatarViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
